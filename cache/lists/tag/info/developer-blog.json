{"id":"lists/tag/info/developer-blog","title":"Developer blog","style":{"primaryColour":"#005689","secondaryColour":"#4bc6df","overlayColour":"#183f5d","backgroundColour":"#ffffff"},"pagination":{"currentPage":1,"totalPages":12,"uris":{"next":"http://mobile-apps.guardianapis.com/lists/tag/info/developer-blog?page=2","last":"http://mobile-apps.guardianapis.com/lists/tag/info/developer-blog?page=12"}},"cards":[{"title":"Conference report: Scala Days Amsterdam 2015","rawTitle":"Conference report: Scala Days Amsterdam 2015","item":{"type":"liveBlog","id":"info/developer-blog/live/2015/jun/08/conference-report-scala-days-amsterdam-2015","title":"Conference report: Scala Days Amsterdam 2015","trailText":"Reporting live from the Scala Days conference in Amsterdam","standFirst":"<p>Reporting live from the Scala Days conference in Amsterdam</p>","byline":"Chris Birchall","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/6/8/1433773106189/88ddeed6-7b08-4679-9e3c-8e66b86d74b4-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","credit":"Chris Birchall","altText":"Welcome to Scala Days","cleanCredit":"Photograph: Chris Birchall"}],"bodyImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/6/9/1433855876144/df223897-b415-4871-951f-e4f4066f0c46-1360x2040.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":2040,"width":1360,"orientation":"portrait","caption":"Foam plane","credit":"Chris Birchall","altText":"Foam plane","cleanCaption":"Foam plane"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/6/9/1433839428060/64ea314f-c06c-4a1d-9de4-fa291d84fe8c-1360x2040.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":2040,"width":1360,"orientation":"portrait","caption":"Stained glass in the Beurs van Berlage","credit":"Chris Birchall","altText":"Stained glass in the Beurs van Berlage","cleanCaption":"Stained glass in the Beurs van Berlage"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/6/9/1433837567516/505a5c6a-2a44-49ad-ab09-149670ac94ef-1360x2040.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":2040,"width":1360,"orientation":"portrait","caption":"Scala Days energy drink","credit":"Chris Birchall","altText":"Scala Days energy drink","cleanCaption":"Scala Days energy drink"}],"webPublicationDate":"2015-06-10T14:39:35Z","lastModified":"2015-06-10T14:39:44Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Chris Birchall","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/chris-birchall"}],"feature":false,"keywords":["Technology","Programming"],"tags":[{"id":"technology/technology","webTitle":"Technology"},{"id":"technology/programming","webTitle":"Programming"}],"section":{"id":"info"},"displayHint":"news","topics":[],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#b51800","navigationDownColour":"#cc2b12","ruleColour":"#b51800","liveBlogLabelColour":"#333333","headlineColour":"#333333","standfirstColour":"#676767","updateColour":"#999999","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#cc2b12","colourPalette":"deadBlog"},"liveContent":{"liveBloggingNow":false,"blocks":[{"id":"block-5575a44ce4b0649ab501a9d1","publishedDateTime":"2015-06-08T14:26:23Z","lastUpdatedDateTime":"2015-06-09T12:45:17Z","body":"<p>I’ll be liveblogging here throughout the conference. I’ve never attempted liveblogging a conference before, so this is a little experimental. Please bear with me and we’ll see how it goes...</p> \n<p>I’ve just arrived at the Scala Days venue and picked up my T-shirt and swag.</p> \n<p>I’m looking forward to Martin Odersky’s keynote. He usually saves his most interesting announcements for Scala Days keynotes, so I’m hoping we’ll get some details on the progress of <a href=\"https://github.com/lampepfl/dotty\">Dotty</a> and <a href=\"http://scala-lang.org/gsoc/2015.html#tasty_support_for_scala\">TASTY</a>. And maybe we’ll find out the new name for Typesafe?<br /></p>","postType":"blog"},{"id":"block-5575ac8fe4b0649ab501aa00","publishedDateTime":"2015-06-08T14:54:47Z","body":"<p>Typesafers spotted so far: Odersky, Dick Wall, Josh Suereth. Odersky should be on stage in a few minutes.</p>","postType":"blog"},{"id":"block-5575af55e4b0f9a3b096a37c","publishedDateTime":"2015-06-08T15:06:08Z","body":"<p>Josh kicks things off with some healthy dissing of other programming languages.</p>","postType":"blog"},{"id":"block-5575afd5e4b073af8b5da63b","publishedDateTime":"2015-06-08T15:09:34Z","lastUpdatedDateTime":"2015-06-08T15:09:45Z","body":"<p>The official Scala Days Android app is written in Scala and the source is available on GitHub.</p>","postType":"blog"},{"id":"block-5575b0bce4b06840f0819ed8","publishedDateTime":"2015-06-08T15:12:19Z","body":"<p>Bill Venners is announced as the winner of this year’s Phil Bagwell award.</p>","postType":"blog"},{"id":"block-5575b2e3e4b073af8b5da650","publishedDateTime":"2015-06-08T15:21:30Z","body":"<p>Martin just changed the title of his keynote, live on stage. So agile!</p>","postType":"blog"},{"id":"block-5575b722e4b073af8b5da667","publishedDateTime":"2015-06-08T15:39:51Z","body":"<p>Martin is giving his blessing to Scala.js. He seems very keen on it.</p>","postType":"blog"},{"id":"block-5575b7cae4b073af8b5da66c","publishedDateTime":"2015-06-08T15:43:53Z","body":"<p>Martin claims that he never waits for the compiler when working on his 50 kloc project (Dotty, I assume). Progress has been made not on making the compiler faster but on making it smarter, i.e. only compiling things that need to be recompiled. Compilation speed is about 500 lines/second for an average codebase.</p>","postType":"blog"},{"id":"block-5575b99ee4b06840f0819f11","publishedDateTime":"2015-06-08T15:53:21Z","body":"<p><a href=\"http://scaladays.knoldus.com/\">Here’s a cool demo</a> that performs sentiment analysis on conference tweets and displays them in real-time. It’s running on Spark.</p>","postType":"blog"},{"id":"block-5575bf17e4b073af8b5da69a","publishedDateTime":"2015-06-08T16:13:40Z","body":"<p>“Should have a [dotty] alpha release by Scala Days Amsterdam” according to the slide, but unfortunately it’s not quite ready yet.</p>","postType":"blog"}],"keyEvents":[],"paginationLinks":{"newer":"http://live-blogs.mobile-apps.guardianapis.com/newer/info/developer-blog/live/2015/jun/08/conference-report-scala-days-amsterdam-2015?date=2015-06-08T16:13:40Z"}},"links":{"uri":"http://live-blogs.mobile-apps.guardianapis.com/items/info/developer-blog/live/2015/jun/08/conference-report-scala-days-amsterdam-2015","shortUrl":"http://gu.com/p/49gm9","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/live/2015/jun/08/conference-report-scala-days-amsterdam-2015","webUri":"http://www.theguardian.com/info/developer-blog/live/2015/jun/08/conference-report-scala-days-amsterdam-2015"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/6/8/1433773106189/88ddeed6-7b08-4679-9e3c-8e66b86d74b4-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Welcome to Scala Days Photograph: Chris Birchall","credit":"Chris Birchall","altText":"Welcome to Scala Days","cleanCaption":"Welcome to Scala Days","cleanCredit":"Photograph: Chris Birchall"}},"importance":7,"showQuotedHeadline":false,"sublinks":[]},{"title":"Maintaining an open source project at the Guardian","rawTitle":"Maintaining an open source project at the Guardian","item":{"type":"article","id":"info/developer-blog/2015/may/29/maintaining-an-open-source-project-at-the-guardian","title":"Maintaining an open source project at the Guardian","trailText":"A look back at how we’ve been working with our community on the Scribe project","standFirst":"<p>Scribe is the most popular in-house open source project in the Guardian. Recently community developers have been making some major contributions to the project, confirming the value of open-source and the benefit of the Guardian of being open about our work.</p>","byline":"Robert Rees","body":"<p>Over the 2015 Easter holiday the <a href=\"https://github.com/guardian/scribe\">Scribe project</a> received more than 3000 stars (a combination of bookmarking, liking and favouriting) on <a href=\"https://github.com\">Github</a>, making it easily one of the most popular open-source projects we have created at the Guardian.</p> \n<p>In addition to that milestone we also celebrated the release to our internal production systems of a number of community-contributed changes to Scribe. Guardian journalists now benefit every day from participation in the open-source community!</p> \n<p>With what Scribe’s achieved, it’s worth taking a look at the ups and downs of open-sourcing software and of the Scribe project itself.</p> \n<h2>What is Scribe?</h2> \n<p>Scribe is a <a href=\"https://remysharp.com/2010/10/08/what-is-a-polyfill\">polyfill</a> (although sometimes it has a touch of the <a href=\"http://irisclasson.com/2013/01/30/stupid-question-139-what-is-a-shim/\">shim</a> about it) for the <a href=\"http://www.w3.org/TR/2008/WD-html5-20080610/editing.html\">Content Editable spec</a> (<a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_Editable\">MDN</a> | <a href=\"http://html5doctor.com/the-contenteditable-attribute/\">HTMLDoctor</a>). Content Editable allows blocks in a web page to become editable directly in the browser, and in some ways it is the culmination of Tim Berners-Lee’s vision of the read-write web.</p> \n<p>As a polyfill Scribe exists to make the behaviour of Content Editable consistent across browsers. You can read <a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2014/mar/20/inside-the-guardians-cms-meet-scribe-an-extensible-rich-text-editor\">more about Scribe in our original Developer Blog post</a> about it.</p> \n<h2>Expanding Scribe with Plugins</h2> \n<p>When you add in its <a href=\"https://github.com/guardian/scribe/wiki/Plugins\">eco-system of plugins</a> then Scribe is a powerful and complete web editor. The link above is just to the plugins that the Guardian development team maintains. A number of other developers have created their own plugins to meet the needs of their own users.</p> \n<p>Ankit Ahuja from Coursera has written about <a href=\"https://tech.coursera.org/blog/2015/03/31/make-editing-courses-on-coursera-fun/\">how Scribe has been used to create course material</a>. Even better, <a href=\"http://coursera.github.io/scribe-plugins/\">the Coursera plugins have been open-sourced</a>, so if you want to add a table in Scribe you can simply load the existing plugin.</p> \n<p>A combination of plugin configuration and the ability to fork an existing plugin means that it is possible to create bespoke behaviour easily.</p> \n<h2>Recent contributions</h2> \n<p>Plugins are not the only place that people are making contributions to Scribe. Recently we wanted to try and change our default undo manager – <a href=\"https://github.com/guardian/scribe/issues/335\">our users were frustrated by the default behaviour</a> which was to undo one character at a time. A very safe choice but not suitable for journalists who wanted something a bit more dynamic. Enter Abdulrahman Alsaleh who <a href=\"https://github.com/guardian/scribe/pull/346\">submitted a PR</a> that attempted to address our tentative issue on the subject whilst also <a href=\"https://github.com/guardian/scribe/issues/334\">scratching his own itch</a> in classic open-source style. Getting the pull request into the code base involved effort from both ourselves and Abdulrahman but, when it finally landed, our users loved it and we had saved a lot of effort having to code it entirely by ourselves.</p> \n<p>Another great recent contribution came from David Tobin who submitted <a href=\"https://github.com/guardian/scribe/pull/363\">a PR that allows Scribe instances to control what default plugins</a> are loaded in a base Scribe instance. By default we choose a setup that matches what we want for the Guardian but we always realised that some of those baked-in rules ran contrary to other people’s expectations.</p> \n<p>The configuration contribution was less user-facing and more aimed at the developer community that exists around Scribe. Making it easier for people to use and build on what we had already built and making it more valuable to the community. Such contributions help develop the software we collectively own rather than waiting for Guardian developers to find the time to address an issue that doesn’t directly affect our use of Scribe.</p> \n<p>Both contributions show the immense <a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2014/nov/28/developing-in-the-open\">value and potential of open-source software to organisations like the Guardian</a>. It is great for an organisation to be able to open repositories as freely as we have done and it feels even better when that openness is rewarded with collaboration and contributions from the community.</p> \n<p>To those people who make this possible: thank you.</p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/2/1427986937368/4582294721_7d9c5ea7dd_o-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","credit":"Ben Grey/flickr","altText":"Children sharing a snack"}],"bodyImages":[],"webPublicationDate":"2015-05-29T06:00:03Z","lastModified":"2015-05-29T06:03:42Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Robert Rees","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/robert-rees"}],"feature":false,"keywords":["Programming","Computing"],"tags":[{"id":"technology/programming","webTitle":"Programming"},{"id":"technology/computing","webTitle":"Computing"}],"section":{"id":"info"},"topics":[{"displayName":"Robert Rees","topic":{"type":"tag-contributor","name":"profile/robert-rees"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/may/29/maintaining-an-open-source-project-at-the-guardian","shortUrl":"http://gu.com/p/477p3","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/may/29/maintaining-an-open-source-project-at-the-guardian","webUri":"http://www.theguardian.com/info/developer-blog/2015/may/29/maintaining-an-open-source-project-at-the-guardian"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/2/1427986937368/4582294721_7d9c5ea7dd_o-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Sharing <a href=\"https://www.flickr.com/photos/ben_grey/4582294721/\">Photograph: Ben Grey/flickr</a>","credit":"Ben Grey/flickr","altText":"Children sharing a snack","cleanCaption":"Sharing <a href=\"https://www.flickr.com/photos/ben_grey/4582294721/\">Photograph: Ben Grey/flickr</a>"}},"importance":5,"showQuotedHeadline":false,"sublinks":[]},{"title":"Designing in the dark: How we created the Guardian App for Apple Watch","rawTitle":"Designing in the dark: How we created the Guardian App for Apple Watch","item":{"type":"article","id":"info/developer-blog/2015/may/01/designing-in-the-dark-how-we-created-the-guardian-app-for-apple-watch","title":"Designing in the dark: How we created the Guardian App for Apple Watch","trailText":"<strong>How do you design a great experience for a product that does not exist?</strong>","standFirst":"<p><strong>How do you design a great experience for a product that does not exist?</strong></p>","byline":"Helene Sears","body":"<p>Whenever we are creating something for our readers, we start by understanding their needs. Typically that involves digging into usage data to find patterns of behaviour in addition to speaking to people to understand how they are using our product. Last November when we kicked off designs for Apple Watch we had no such luxury. Not only had we never held one, but we could only guess how people would actually use it.</p> \n<h2><strong>“Research” and idea generation</strong></h2> \n<p>Although we could not do traditional methods of research, the whole apps team is passionate about mobile technology and quite a few of us have Android wearables, meaning we could pool our collective experiences. We also had the guidelines from Apple explaining that Watch would be lightweight, timely and highly personal.</p> \n<p>Kicked off by our product manager <a href=\"x-gu://list/mobile-apps.guardianapis.com/lists/tag/profile/tom-grinsted\">Tom Grinsted</a> and Mobile Editor <a href=\"x-gu://list/mobile-apps.guardianapis.com/lists/tag/profile/subhajit-banerjee\">Subhajit Banerjee</a> we got together and discussed everything we knew about the device. Lead iOS developer <a href=\"x-gu://list/mobile-apps.guardianapis.com/lists/tag/profile/petr-krojzl\">Petr Krojzl</a> had been working on the WatchKit (the code released from Apple for Watch) in his spare time and explained the key features: App, Glance and Notifications.</p> \n<figure class=\"element element-image\" data-media-id=\"d5ad84b983d6ca5751b1f3140634b9b52c08b839\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/5/1/1430469844287/863a1055-25ea-40d9-b086-d9de3a25c2e5-460x276.jpeg\" alt=\"Working wall\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Our working wall of how the Apple Watch looked and worked</span> \n </figcaption> \n</figure> \n<p>The “App” is the full offering on the device - a mini version of the main app that is on the iPhone. “Glance” is a snapshot of the Watch app, it is meant to be whatever is most relevant at that time. Finally “Notifications” are the easiest to understand, they are alerts that something has happened (a new email for example) and Watch vibrates and pops up a message to tell you about it. <br /></p> \n<p>Quite quickly we realised that the experience had to be lightweight and relevant. We knew readers would be looking at the Guardian on Watch for a few seconds, tops. We listed all of the things the app could display, but as a team we honed in on the idea that the app should give the user one key thing that they should know at any given moment.</p> \n<figure class=\"element element-image\" data-media-id=\"34a4b58bb5af51ee3e2c265f70d954e3e60e6ff5\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/5/1/1430470012859/31fc3d50-ee77-40a0-a498-2b02198b630a-460x276.jpeg\" alt=\"Selection of watch designs\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">The team sketched out lots of ideas and we voted on our top choices</span> \n </figcaption> \n</figure> \n<p>Dubbed ‘Moments’ by Creative Director Alex Breuer (with the pun intended), the idea evolved to be a single piece of content for a user at any given time. Rather than always being news headlines however, the content itself would vary over the day depending on context and history to ensure the reader always gets something fresh and worthwhile. This also reflects the Guardian brand, which whilst serious at times is also not afraid to be fun and playful.<br /></p> \n<figure class=\"element element-image element--supporting\" data-media-id=\"6038153d69fd6a73dc91da6d4da1fe23e844bd8f\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/28/1430234782620/018e209d-74be-4a2a-a9ab-9dfcb44f8873-460x276.jpeg\" alt=\"Watch on wrist\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">To get a feel for the actual size we made an Apple Watch to scale out of paper and held together with blue tack</span> \n </figcaption> \n</figure> \n<h2>Mapping the day for Guardian Moments</h2> \n<p>We know Guardian readers have core needs around getting fast updates, extending their knowledge and discovering new content. Especially first thing in the morning, there is a critical user need to know the very latest of what is going on in the news. Over the course of the day however, there is more interest in light and different stories and we wanted to show off the range of what we produce to help readers discover stories. We picked out our great content, ranging from <a href=\"http://www.theguardian.com/news/series/ten-best-photographs-of-the-day\">photo highlights of the day</a> on a Monday as a pick-me-up to <a href=\"http://www.theguardian.com/film/series/peter-bradshaw-film-of-the-week\">Peter Bradshaw’s film of the week</a> on a Friday to get ready for the weekend. </p> \n<p>It must have looked a bit odd, but we printed images of Apple Watch to scale and while designing I kept one on my wrist, held in place by blue tack. It forced me to think about the experience on that small screen and how quick the interactions would be (holding your arm up for a long time is tiring). Although there was a lot of complexity behind what the Guardian Watch app was choosing to display, the user experience was designed to be extremely minimal and very relevant. We mapped the whole experience in a timeline.</p> \n<figure class=\"element element-image\" data-media-id=\"a5d456998794d669ad70961f9a85cf940f7a49fc\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/5/1/1430474382889/d572370a-e5eb-4ffc-93e1-78117480c2d7-460x172.png\" alt=\"Watch timeline\" width=\"460\" height=\"172\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">A timeline for what the Guardian Watch app would display</span> \n  <span class=\"element-image__credit\">Photograph: Helene Sears for the Guardian</span> \n </figcaption> \n</figure> \n<p>With the exception of the morning briefing - the editorial top stories of the day - once a piece of content has been seen or read, it refreshes itself with something new. Likewise we wanted the content to be personal, so the Watch app pulls in stories that the user hasn’t read from their app homepage, which can be personalised to ensure that if Archaeology is your favourite section then unread Archaeology stories are what you will get.</p> \n<p>Finally we knew that football is something a lot of Guardian readers love. We introduced tracking in the app that would count the number of times you read a football story about a particular team. If you hit the threshold, match cards would appear on your Watch whenever your team is playing. This also ensured that people who were not interested in football would not see any of it.</p> \n<h2>Design and execution</h2> \n<p>Designer Frank Hulley-Jones reworked the Apple Watch templates to give them Guardian style. The morning briefing kept a focused headline update tone, whereas features and movie reviews had a more relaxed feel.</p> \n<blockquote class=\"quoted\"> \n <p>On one hand designing for the Apple Watch was about displaying content that was intriguing and timely. The second hand was mainly focused on not making too many watch puns.”<br />– Designer Frank Hulley-Jones</p> \n</blockquote> \n<p>Frank emphasised it was crucial that readers instantly recognise that they’re reading Guardian content, no matter what device they’re on.</p> \n<figure class=\"element element-embed\" data-alt=\"Example interaction on Apple Watch\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;img src=&quot;http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/5/1/1430472639233/GuardianAppleWatchwrist.gif&quot; style=&quot;width:100%;&quot; /&gt;\"></iframe> \n <figcaption>\n  Example interaction on Apple Watch\n </figcaption> \n</figure> \n<h2>Release and next steps</h2> \n<p>Alongside many other enthusiasts we anxiously awaited the impact of Apple Watch. For our team it was seen as a chance to experiment and try something new.</p> \n<p>Designing in the dark was daunting at first, but invigorating by the end. It meant we could not rely on previous products and decisions, but had to genuinely imagine our readers’ lives with this new bit of technology and trust our instincts. </p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/29/1430307008370/ab7a29d0-8d46-498e-8248-2ef5bff9ec41-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","credit":"Frank Hulley-Jones for the Guardian","altText":"Selection of watch designs","cleanCredit":"Photograph: Frank Hulley-Jones for the Guardian"}],"bodyImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/5/1/1430469845669/23303e23-37b8-45dd-bc13-64a7ef66a4c2-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Our working wall of how the Apple Watch looked and worked","credit":"Helene Sears for the Guardian","altText":"Working wall","cleanCaption":"Our working wall of how the Apple Watch looked and worked"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/5/1/1430470014093/7924b6a7-5847-49b6-b94d-f518cecbf4f9-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"The team sketched out lots of ideas and we voted on our top choices","credit":"Helene Sears for the Guardian","altText":"Selection of watch designs","cleanCaption":"The team sketched out lots of ideas and we voted on our top choices"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/28/1430234783780/024b4c61-a80a-4b4e-b754-16c8ba5d139d-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"To get a feel for the actual size we made an Apple Watch to scale out of paper and held together with blue tack","credit":"Helene Sears for the Guardian","altText":"Watch on wrist","cleanCaption":"To get a feel for the actual size we made an Apple Watch to scale out of paper and held together with blue tack"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/5/1/1430474382181/0c70ad4f-0975-4a6c-9820-9ab1531f9071-2060x770.png?width=#{width}&height=#{height}&quality=#{quality}","height":770,"width":2060,"orientation":"landscape","caption":"A timeline for what the Guardian Watch app would display Photograph: Helene Sears for the Guardian","credit":"Helene Sears for the Guardian","altText":"Watch timeline","cleanCaption":"A timeline for what the Guardian Watch app would display","cleanCredit":"Photograph: Helene Sears for the Guardian"}],"webPublicationDate":"2015-05-01T10:48:11Z","lastModified":"2015-05-01T16:39:46Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Helene Sears","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/helene-sears"}],"feature":false,"keywords":["Apple Watch","Technology"],"tags":[{"id":"technology/apple-watch","webTitle":"Apple Watch"},{"id":"technology/technology","webTitle":"Technology"}],"section":{"id":"info"},"topics":[{"displayName":"Helene Sears","topic":{"type":"tag-contributor","name":"profile/helene-sears"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/may/01/designing-in-the-dark-how-we-created-the-guardian-app-for-apple-watch","shortUrl":"http://gu.com/p/48vak","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/may/01/designing-in-the-dark-how-we-created-the-guardian-app-for-apple-watch","webUri":"http://www.theguardian.com/info/developer-blog/2015/may/01/designing-in-the-dark-how-we-created-the-guardian-app-for-apple-watch"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/29/1430307008370/ab7a29d0-8d46-498e-8248-2ef5bff9ec41-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"Selection of watch designs","credit":"Composite: Frank Hulley-Jones for the Guardian","altText":"Selection of watch designs","cleanCaption":"Selection of watch designs"}},"importance":5,"showQuotedHeadline":false,"sublinks":[]},{"title":"Extra! Extra! Rethinking the Guardian Breaking News Experience","rawTitle":"Extra! Extra! Rethinking the Guardian Breaking News Experience","item":{"type":"article","id":"info/developer-blog/2015/apr/28/extra-extra-rethinking-the-guardian-breaking-news-experience","title":"Extra! Extra! Rethinking the Guardian Breaking News Experience","trailText":"Rethinking how breaking news stories should be covered on the Guardians’ new responsive site meant taking an in-depth look at what makes these types of stories so unique and the value they bring to our readers.","standFirst":"<p>Rethinking how breaking news stories should be covered on the Guardians’ new responsive site meant taking an in-depth look at what makes these types of stories so unique and the value they bring to our readers.</p>","byline":"Mario Andrade","body":"<p>A news organisation that readers can trust is one that provides an accurate representation of the days’ events and understands the differences in speed that news stories naturally have. Most news stories are slow: they evolve gradually and some can even be easily predicted. Other stories live on the fast end of the scale. They develop quickly and their details aren’t always clear. It’s on this end of the scale that we can find one type of story that’s quite different. A type of story that develops very quickly, where not all the details are clear and of a relevance and impact to a wider audience that sets it apart from all others.</p> \n<p>This is the remit of breaking news stories.<br /></p> \n<p>In this post I’ll show some of the work we’ve been doing to rethink the Guardian breaking news experience – but first, let’s take a step back in time…</p> \n<h2>1858</h2> \n<figure class=\"element element-image\" data-media-id=\"850a444655adce6a0d69285bb45ec56d88db6f68\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/21/1429633028335/2ce3dccd-315a-4d5a-9dae-4328a7e475a9-460x181.jpeg\" alt=\"Map of the 1858 Atlantic Cable route\" width=\"460\" height=\"181\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Map of the 1858 Atlantic Cable route.</span> \n  <span class=\"element-image__credit\">Illustration: Howe's Adventures &amp; Achievements of Americans</span> \n </figcaption> \n</figure> \n<p>157 years ago the first successful transatlantic telegraph cables were laid on the bottom of the Atlantic ocean. It was a breakthrough moment in technology and in the way we communicate. News that used to take 10 days to go from Europe to America by ship could now be transmitted within seconds. This was how a journalist at the time saw impact of the telegraph on reporting news stories:</p> \n<blockquote class=\"quoted\"> \n <p>“The press laid it fresh before the reader like steak hot from the gridiron, instead of being cooled and rendered flavourless by a slow journey from a distant kitchen.”</p> \n <p><strong>- <a href=\"http://books.google.co.uk/books/about/American_Journalism.html?id=JOItkXKZ-3EC&amp;redir_esc=y\">W. David Sloan, Lisa Mullikin Parcell. 2002. American Journalism: History, Principles and Practices</a></strong><br /></p> \n</blockquote> \n<p>With big technological shifts, just like the transatlantic telegraph cable, the way we communicate and report on the world around us changes dramatically. The internet, personal computers and all the little devices that surround us are sort of the transatlantic telegraph cables of today and their impact in our lives is exponentially greater.</p> \n<p>The same is true for news organisations, as with these digital connected platforms news organisations can:</p> \n<ul> \n <li>be faster than ever before<br /></li> \n <li>reach new audiences<br /></li> \n <li>easily collect audience contributions<br /></li> \n <li>provide more engaging visual experiences</li> \n</ul> \n<p>The world has never been as connected as it is today. It’s an incredibly exciting time for news organisations to explore new and better ways to reach their audiences. And breaking news is the key editorial area where this is most important.</p> \n<p>To better understand breaking news stories, let’s explore three characteristics that make these stories so unique and how we’ve been tackling them throughout this project.</p> \n<h2>Breaking news stories are relevant to a wide audience</h2> \n<p>Making the judgement of what events are breaking news isn’t quite as obvious as it may seem – there’s always the danger of being too open and diluting the value of this special type of coverage. At the Guardian we see breaking news events as unexpected, momentous or informative events that are relevant to a wide audience. On top of this definition, our editors also consider other aspects of the events:</p> \n<ul> \n <li>Is this event part of an ongoing story?<br /></li> \n <li>Is this event part of a subject the Guardian often reports on?<br /></li> \n <li>Is this event relevant to the readers in our editions? (United Kingdom, United States of America and Australia)</li> \n</ul> \n<p>The importance, relevance and impact of these events to our readers justifies the need to reach out and proactively make them aware of the story. The push notification alerts on the Guardian’s iOS and Android apps allow our editorial team to do just this. This has been an incredibly successful feature as we currently have a very high number of users staying opted-in to the push notification alerts and from their feedback we know it provides a valuable service.</p> \n<p>Though the apps took this first step, the use case for making our readers aware of a breaking news story is the same whether they are using the app or the site. This was one of the starting points for the project: how could we easily display breaking news alerts on the site?</p> \n<p>The team knew we couldn’t necessarily replicate the same level of interruption that a push notification on the apps achieves, so we’ve decided to take a different approach. We’ve created an alert overlay which, once triggered by the editorial team, displays prominently across all the pages of the site. This would ensure a high level of visibility as we’re reaching out to all the readers of the site in that moment, whether they’ve just opened the site on the homepage or arrived at an individual story from following a link from social media.</p> \n<figure class=\"element element-image element--showcase\" data-media-id=\"fd0edca0e62e21cd9f54366a2bd488b66633349c\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/21/1429633179197/5514cc02-a154-4ac9-817d-f15a271b6402-460x276.png\" alt=\"Breaking News alert on the Guardian site.\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">The alert overlay is prominently displayed on the bottom of the screen of every page of the Guardian site.</span> \n </figcaption> \n</figure> \n<p>The process of creating this alert overlay was defined by several quick iterations. The team started with a low-fidelity version of the alert and tested it with users to capture their initial reactions to the alert. One of the things we’ve learned was that this format wasn’t prominent enough, which should be its main job. This got us thinking about how could we create more effective ways of making users aware of the alert. We quickly ran a second round of testing where we tested three separate versions of the alert.</p> \n<figure class=\"element element-image element--showcase\" data-media-id=\"a8bd43c0fc52daf1994a1998d897f9bdd85dc988\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/21/1429633246923/4748d8e5-4e4f-416d-b64b-8d2c3b6b97ef-460x86.png\" alt=\"Three breaking news alert variations.\" width=\"460\" height=\"86\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">The three breaking news alert variations that we’ve tested.</span> \n </figcaption> \n</figure> \n<p>The three versions of the alert were designed to achieve different levels of intrusiveness. Intrusiveness is a key characteristic to consider when creating an interface for raising awareness. The more intrusive something is, the more likely you are to see it – but if it’s too intrusive it can be deterring to the experience. This test helped us find the right balance between intrusiveness and awareness.</p> \n<p>The final version we’ve arrived at is a solution that’s halfway between these three versions. It’s not the most prominent visually but it compensates by staying persistently in view until opened or closed, meaning it always requires an interaction from our readers. Even if they don’t open the story, they will have been exposed to the alert headline and are aware of the story.</p> \n<p>There is real value in raising awareness to breaking news stories and delivering an alert to all our readers so effortlessly – independently of what device they’re using – was definitely a big step forward.<br /></p> \n<h2>Breaking news stories are constantly developing</h2> \n<p>From the moment a breaking news event first catches the attention of the news desk, it will continue changing and developing at a very fast pace. Publishing a full, highly detailed story is time consuming. A considerable amount of time is necessary to commission the story from a journalist, for the story to be written, edited and published. By the time this process is finished, the whole effort might turn out to be useless as the direction of the story may have changed dramatically. When covering breaking news stories, speed is paramount and that can only be truly achieved when both the news desk’s processes and the editorial tools are optimised.</p> \n<p>Throughout the project we’ve interviewed all the editorial team members involved in covering breaking news stories and created a diagram which breaks down the whole editorial process. This includes all the steps in the process, who is involved at each step and the different variations in the process.</p> \n<figure class=\"element element-image\" data-media-id=\"83ecccef078e5f3c56c981d91c53bbd0400c1c6f\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/21/1429633372549/9ba36255-d267-4f9e-966b-29fb3ae2241f-460x276.jpeg\" alt=\"Diagram of the editorial process to cover breaking news stories.\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">This diagram provided a useful overall view of the editorial process for covering breaking news stories.</span> \n </figcaption> \n</figure> \n<p>This exercise allowed the team to see more clearly the bottlenecks and opportunities in their day-to-day processes and to start thinking about how we could achieve a simplified editorial process.</p> \n<p>One of the important steps we’ve recently taken to address the process findings was to assign the coverage of all the aspects of breaking news stories to a small group of news editors. The group is now responsible for actively looking for stories, writing and editing all the early reporting, publishing the story and sending alerts to apps and web. This small structural change was a very important step forward as it gave full ownership of breaking news to these news editors, allowing them to cover the stories a lot more efficiently.</p> \n<p>From the perspective of our editorial tools, the development of the breaking news alert on the site was a big step forward and it came with the benefit of being powered by a new tool. This new tool is better integrated with the other editorial tools, more flexible but most importantly it is very fast. The tool allows the news editors to easily find stories, create alerts and display them on the site very efficiently.</p> \n<figure class=\"element element-image element--showcase\" data-media-id=\"05db937dddc0ac9d6759629a2ddca63fb58fb73e\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/21/1429633759241/44ad29c7-7c5a-4335-a8e9-088aebd3e060-460x276.png\" alt=\"Editorial tool used to send breaking news alerts to the Guardian site.\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">The breaking news tool provides only the core functionality necessary to find a story and quickly draft the alert headline.</span> \n </figcaption> \n</figure> \n<p>This tool originated from a hack project built on top of an existing editorial tool for editing fronts. We tested this early version by running a trial with news editors during a couple of weeks. This quick testing approach allowed the team to quickly learn from our editors how the tool was performing and understand how to keep refining it before opening the tool to more people in the organisation.</p> \n<p>Becoming a faster organisation requires lots of changes in multiple places, but the changes we’ve made so far have already allowed us to be a lot quicker and responsive covering breaking news stories.</p> \n<h2>Breaking news stories are often unclear</h2> \n<p>Because breaking news events are generally unexpected and coverage often starts from a blank slate, it means journalists don’t always have a full perception of all the defining story details when they start reporting. As the coverage gradually starts picking up pace, the amount of information that flows in can be overwhelming. This creates a sense of uncertainty, especially at the beginning of the coverage. There’s a lot of information that is just not visible to the journalists and to the readers, which might move the story forward in unpredictable directions. Reporting quickly is obviously the best way to address this uncertainty but as part of this project we’ve tried to think beyond that. One of the areas we’ve been thinking about is the role push notification alerts can play solving this uncertainty.</p> \n<p>Think about <a href=\"x-gu://list/mobile-apps.guardianapis.com/lists/tag/world/charlie-hebdo-attack\">the attacks in Paris last year</a>. The story was very loose at the beginning, it wasn’t clear what was happening. And even when some information started surfacing, the story kept evolving. Our editorial team in that day sent several follow up alerts to ensure our readers were aware of the true nature of the story.</p> \n<figure class=\"element element-image\" data-media-id=\"ea9dc6d9c98c39e2963d2a42f7d5e7060e9338f7\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/21/1429633912105/94360db4-6e09-4a98-93b1-10b4dc5f91ca-460x276.png\" alt=\"Breaking news push notifications sent during the Charlie Hebdo coverage.\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Examples of push notification breaking news alerts sent during the coverage of the Charlie Hebdo events in Paris.</span> \n </figcaption> \n</figure> \n<p>This was a great way to address this uncertainty but it isn’t a pattern we can use for all our breaking news stories. Sending follow up alerts for every single story would be very interruptive because not all readers will be interested in following the coverage so closely and not all stories are so relevant and impactful to deserve a follow-up alert to everyone. We have to be mindful and respectful of our readers’ attention.</p> \n<p>One solution we’ve been thinking about is providing a ‘follow the story’ call-to-action for readers to express interest in the story.</p> \n<figure class=\"element element-image\" data-media-id=\"3adc506b46da70d6428e8e55cba367d51c816811\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/21/1429634052674/66717e30-1131-4fa6-bf55-2cb4de5a6f90-460x460.png\" alt=\"Concept of a breaking news 'follow this story' button.\" width=\"460\" height=\"460\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">A ‘Follow this story’ button could be provided next to breaking news stories on the Guardian site and apps.</span> \n </figcaption> \n</figure> \n<p>This would allow the interested readers to receive follow-up alerts with important, shorter story developments, independently of what device they’re using. They could even press the ‘Follow the story’ call-to-action on the site and receive a push notification on their phone.</p> \n<figure class=\"element element-image\" data-media-id=\"23ce8f2ccbb135035abdb7ed07fb91549e473444\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/21/1429634242954/e0021576-3aa3-4d40-af21-3867cf0b2772-460x230.png\" alt=\"Feedback for pressing the 'follow this story' button and example of a follow up alert on the device.\" width=\"460\" height=\"230\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">After following the story, any relevant follow up alerts could be sent to the readers that opted in.</span> \n </figcaption> \n</figure> \n<p>Though at the moment this feature is only a concept, it could be very powerful as it gives the readers an effortless way to address the uncertainty around these stories, by trusting the Guardian to reach out and keep them updated with all the important story developments.</p> \n<h2>2015</h2> \n<p>Looking back at the unique characteristics of breaking news stories, we do know what things we need to continue doing going forward. The Guardian’s breaking news coverage should raise awareness of these stories, report them as quickly as possible and look for new ways to reduce the uncertainty around them.</p> \n<p>At the beginning of this article I talked about the first transatlantic telegraph cable and how that changed the way we communicate. Nowadays, these cables have been replaced by many telecommunications cables that spread across the all the ocean floors and aren’t even comparable in speed and reach.</p> \n<figure class=\"element element-image\" data-media-id=\"83588ece6236f0656990353b1d12b8440a64d330\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/4/21/1429634422646/c3c94cff-d611-4ba5-af38-52d05e71c02a-460x276.png\" alt=\"Global Traffic Map of voice traffic flows on the world’s largest international calling routes.\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">This map depicts voice traffic flows on the world’s largest international calling routes.</span> \n  <span class=\"element-image__credit\">Composite: TeleGeography</span> \n </figcaption> \n</figure> \n<p>All the work I’ve shown you today has allowed us to take a first step into this exciting connected world. There are still many exciting opportunities ready to be explored. And many ways we could create a better breaking news experience that plays to the strengths of the Guardian. </p> \n<blockquote class=\"quoted\"> \n <p>To live in modernity […] is to be constantly reminded that, thanks to science and technology, change and improvement are continuous and relentless. This is part of the reason we must keep checking the news in the first place: we might at any moment be informed of some extraordinary development that will fundamentally alter reality.</p> \n <p><strong>― <a href=\"http://alaindebotton.com/news-users-manual/\">Alain de Botton, The News: A User’s Manual</a></strong></p> \n</blockquote> \n<p>Thank you to <a href=\"https://twitter.com/mattpointblank\">Matt Andrews</a>, <a href=\"https://twitter.com/subhajitb\">Subhajit Banerjee</a> and <a href=\"https://twitter.com/mr_mr\">Chris Clarke</a> for all the feedback and help bringing this post to live.</p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/28/1430219744487/aaac18db-baff-4101-8924-319311d4462b-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","credit":"The Guardian","altText":"“The world has never been as connected as it is today.”","cleanCredit":"Photograph: The Guardian"}],"bodyImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/21/1429633029125/d2ae14dd-ee83-4de9-bcea-70e7d72bdb0f-2060x809.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":809,"width":2060,"orientation":"landscape","caption":"Map of the 1858 Atlantic Cable route. Photograph: Illustration: Howe's Adventures & Achievements of Americans","credit":"Illustration: Howe's Adventures & Achievements of Americans","altText":"Map of the 1858 Atlantic Cable route","cleanCaption":"Map of the 1858 Atlantic Cable route.","cleanCredit":"Illustration: Howe's Adventures & Achievements of Americans"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/21/1429633179784/cbf3b3e5-5aa7-45aa-ba18-bafc3e1469f6-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"The alert overlay is prominently displayed on the bottom of the screen of every page of the Guardian site.","credit":"Composite: The Guardian","altText":"Breaking News alert on the Guardian site.","cleanCaption":"The alert overlay is prominently displayed on the bottom of the screen of every page of the Guardian site."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/21/1429633247086/b5420d5e-8bf5-42e3-beeb-56a9669ab49e-1020x191.png?width=#{width}&height=#{height}&quality=#{quality}","height":191,"width":1020,"orientation":"landscape","caption":"The three breaking news alert variations that we’ve tested.","credit":"Composite: The Guardian","altText":"Three breaking news alert variations.","cleanCaption":"The three breaking news alert variations that we’ve tested."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/21/1429633372965/270b6216-b668-4521-85ea-00535630d3ea-1020x612.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"This diagram provided a useful overall view of the editorial process for covering breaking news stories.","credit":"Composite: The Guardian","altText":"Diagram of the editorial process to cover breaking news stories.","cleanCaption":"This diagram provided a useful overall view of the editorial process for covering breaking news stories."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/21/1429633759831/d12f8970-14ea-4954-a9ae-14dd4136847a-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"The breaking news tool provides only the core functionality necessary to find a story and quickly draft the alert headline.","credit":"Composite: The Guardian","altText":"Editorial tool used to send breaking news alerts to the Guardian site.","cleanCaption":"The breaking news tool provides only the core functionality necessary to find a story and quickly draft the alert headline."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/21/1429633913123/a7987719-3ccb-42ef-8e3a-f02df97905b0-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"Examples of push notification breaking news alerts sent during the coverage of the Charlie Hebdo events in Paris.","credit":"Composite: The Guardian","altText":"Breaking news push notifications sent during the Charlie Hebdo coverage.","cleanCaption":"Examples of push notification breaking news alerts sent during the coverage of the Charlie Hebdo events in Paris."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/21/1429634052194/1b3e7a4a-ca22-4757-9d45-7fd0d4b6457e-620x620.png?width=#{width}&height=#{height}&quality=#{quality}","height":620,"width":620,"orientation":"landscape","caption":"A ‘Follow this story’ button could be provided next to breaking news stories on the Guardian site and apps.","credit":"Illustration: The Guardian","altText":"Concept of a breaking news 'follow this story' button.","cleanCaption":"A ‘Follow this story’ button could be provided next to breaking news stories on the Guardian site and apps."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/21/1429634243731/3b5c03aa-d55f-4f81-a2ad-700b6dad1b89-1020x510.png?width=#{width}&height=#{height}&quality=#{quality}","height":510,"width":1020,"orientation":"landscape","caption":"After following the story, any relevant follow up alerts could be sent to the readers that opted in.","credit":"Illustration: The Guardian","altText":"Feedback for pressing the 'follow this story' button and example of a follow up alert on the device.","cleanCaption":"After following the story, any relevant follow up alerts could be sent to the readers that opted in."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/21/1429634423681/3ab4c232-f8c9-4047-85f5-b13744ec5635-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"This map depicts voice traffic flows on the world’s largest international calling routes. Photograph: Composite: TeleGeography","credit":"Composite: TeleGeography","altText":"Global Traffic Map of voice traffic flows on the world’s largest international calling routes.","cleanCaption":"This map depicts voice traffic flows on the world’s largest international calling routes.","cleanCredit":"Composite: TeleGeography"}],"webPublicationDate":"2015-04-28T11:12:49Z","lastModified":"2015-04-28T14:08:17Z","metadata":{"commentable":true,"commentCount":2,"contributors":[{"name":"Mario Andrade","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/mario-andrade"}],"feature":false,"keywords":[],"tags":[],"section":{"id":"info"},"topics":[{"displayName":"Mario Andrade","topic":{"type":"tag-contributor","name":"profile/mario-andrade"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/apr/28/extra-extra-rethinking-the-guardian-breaking-news-experience","shortUrl":"http://gu.com/p/47y65","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/apr/28/extra-extra-rethinking-the-guardian-breaking-news-experience","webUri":"http://www.theguardian.com/info/developer-blog/2015/apr/28/extra-extra-rethinking-the-guardian-breaking-news-experience"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/4/28/1430219744487/aaac18db-baff-4101-8924-319311d4462b-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"“The world has never been as connected as it is today.”","credit":"The Guardian","altText":"“The world has never been as connected as it is today.”","cleanCaption":"“The world has never been as connected as it is today.”"}},"importance":4,"showQuotedHeadline":false,"sublinks":[]},{"title":"Clever Compilers","rawTitle":"Clever Compilers","item":{"type":"article","id":"info/developer-blog/2015/apr/08/clever-compilers","title":"Clever Compilers","trailText":"Compilers will soon be able to do things people only dreamed of","standFirst":"<p>Compilers are getting more and more sophisticated. Maybe one day they’ll be able to write their own code.</p>","byline":"Hugo Gibson","body":"<p>The future of compilers looks more and more \n <strike>\n   spooky \n </strike> interesting. A recent spate of intelligent compilers are going to change the way programmers interact with computers. They’re going to take away a lot of the complexity of modern software development.</p> \n<p>Two major issues of software engineering of the past two decades or so (probably even longer than that, actually) are: concurrency/parallelism and security. With the multicore revolution, programmers are <a href=\"http://www.gotw.ca/publications/concurrency-ddj.htm\">required</a> to understand concurrency to be able to speed up their code by making use of multiple cores. Concurrency, however, is difficult and many people struggle with understanding it. </p> \n<p>What’s the difference between concurrency and parallelism? What is <a href=\"http://en.wikipedia.org/wiki/Amdahl%27s_law\">Amdahl’s law</a>? How does concurrency affect a program? How does parallelism affect a program? </p> \n<p>Do you know what a side-channel attack is? How could you defend against it? What’s the difference between a power-monitoring attack and a timing attack? What’s a covert channel?</p> \n<p>The point of both these sets of questions is that security, concurrency and parallelism are hard subjects. Both require a certain level of expertise to understand.</p> \n<p>A new wave of compilers are starting to make serious inroads in eliminating concurrency issues and security issues. <a href=\"http://en.wikipedia.org/wiki/Automatic_parallelization\">Parallelising</a> compilers have come a long way in recent years. They work in a variety of ways, the most common being the compilers that identify portions of code with deterministic invariants (i.e. pure loops, code with no I/O) and compile this code to use multiple threads. The main problem for these compilers is finding a way to parallelise non-deterministic code. But even this could be coming <a href=\"http://research.microsoft.com/pubs/131698/IWMSE-keynote.pdf\">closer</a> to reality.<br /></p> \n<p>Compilers optimising for security flaws have made giant leaps recently. One such method uses dynamic control flow diversity to mitigate the effects of<a href=\"http://www.ics.uci.edu/~perl/ndss15_sidechannels.pdf\"> side-channel attacks</a>. Dynamic control flow diversity alters the <a href=\"http://en.wikipedia.org/wiki/Call_graph\">call graph</a> generated at compile-time while the program is running so the attacker cannot learn enough about a program to crack it. The interesting thing about this approach is that it makes heavy use of LLVM to perform JIT call graph randomisation, meaning it avoids the issues involved in distributing randomised software – randomising at compile time creates a different binary which cannot be distributed as the same version of a piece of software.</p> \n<p>The relationship between compilers and engineers is a love/hate one. Some programmers believe that what they write should be what gets executed. Others love the compiler for all the behind-the-scenes optimisations it makes. I’d send the former <a href=\"https://mitpress.mit.edu/sicp/front/node3.html\">here</a>. Compilers are meant to eliminate heavy lifting and free the programmer to do whatever they want, rather than getting bogged down in Assembly-level details.</p> \n<p> As compilers get more and more sophisticated, it doesn’t seem too much of a stretch for compilers that rewrite code they know is broken to become mainstream. Facebook have <a href=\"https://github.com/facebook/pfff\">shown</a> the power of traditional compiler techniques applied to a dynamic language and this seems to be becoming the <a href=\"https://github.com/facebook/flow\">norm</a>.</p> \n<p>The original idea behind LISP was to create a programming language for A.I. that could enable programs to write themselves. It failed. But could this new generation of intelligent compilers put that dream on the horizon?<br /></p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/8d407ba2443005545289bf28ec7986cac94e89ce/0_0_1600_960/1000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":600,"width":1000,"orientation":"landscape","credit":"A binary vortex/Google","altText":"Binary vortex","cleanCredit":"Photograph: A binary vortex/Google"}],"bodyImages":[],"webPublicationDate":"2015-04-08T10:26:51Z","lastModified":"2015-04-08T10:54:42Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Hugo Gibson","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/hugo-gibson"}],"feature":false,"keywords":["Technology","Programming","Computing"],"tags":[{"id":"technology/technology","webTitle":"Technology"},{"id":"technology/programming","webTitle":"Programming"},{"id":"technology/computing","webTitle":"Computing"}],"section":{"id":"info"},"topics":[{"displayName":"Hugo Gibson","topic":{"type":"tag-contributor","name":"profile/hugo-gibson"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/apr/08/clever-compilers","shortUrl":"http://gu.com/p/46fx2","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/apr/08/clever-compilers","webUri":"http://www.theguardian.com/info/developer-blog/2015/apr/08/clever-compilers"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/8d407ba2443005545289bf28ec7986cac94e89ce/0_0_1600_960/1000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":600,"width":1000,"orientation":"landscape","caption":"Binary vortex Photograph: A binary vortex/Google","credit":"A binary vortex/Google","altText":"A binary vortex","cleanCaption":"Binary vortex","cleanCredit":"Photograph: A binary vortex/Google"}},"importance":4,"showQuotedHeadline":false,"sublinks":[]},{"title":"The best way to learn tech is to teach it","rawTitle":"The best way to learn tech is to teach it","item":{"type":"article","id":"info/developer-blog/2015/mar/30/the-best-way-to-learn-tech-is-to-teach-it","title":"The best way to learn tech is to teach it","trailText":"It’s fine to fake it until you make in tech, but there’s no hiding when you try and teach it","standFirst":"<p>You may think you understand a topic but its not until you are having to explain it to someone who doesn’t understand your made up terminology and rules of thumb that you realise what you really know and what you just pretend to understand.</p>","byline":"Robert Rees","body":"<p>Last year <a href=\"x-gu://list/mobile-apps.guardianapis.com/lists/tag/profile/matt-andrews\">one of my colleagues</a> sent round an email announcing a Skills Amnesty. A chance to confess that you didn’t really understand how shell scripts work, or what it means to skew your CSS transform or why you have to use triple equals in JavaScript.<br /></p> \n<p>People were free to submit topics anonymously and then once we had the topics people volunteered to run training sessions that anyone could attend. Hugo Gibson has already <a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2015/jan/27/why-learn-about-algorithms\">written about his algorithms class</a>.</p> \n<p>I was surprised to find that a few people had put down <a href=\"https://www.python.org/\">Python</a> as something they wanted to learn about and volunteered to give some lessons. I had been a bit surprised that people wanted to learn about it given that most Guardian developers’ preferred language is <a href=\"http://www.scala-lang.org/\">Scala</a>. The missing element turned out to be data science and the use of scripting for data munging and the use of libraries like <a href=\"http://www.numpy.org/\">NumPy</a>.</p> \n<h2>Putting together an introduction to Python</h2> \n<p>I have never taught Python before, I have always been more of a student, therefore I looked around for a few models that I could use to shape the course. A whole language with a lot of history was an intimidating challenge to present and also ran the risk of overwhelming the students. </p> \n<p>At the initial meeting with those interested in the course we decided that the lessons would be based around Python 2.7 and that it would use a test-driven approach with unit tests illustrating the talk and whiteboard work.</p> \n<p>I used <a href=\"http://www.diveintopython3.net/\">Dive into Python</a> and <a href=\"http://learnpythonthehardway.org/book/\">Learn Python the Hard Way</a> to form the basis of what I was going to talk about and to shape what beginners might need to know. The final list of topics runs as follows:</p> \n<ul> \n <li>Datatypes: strings, numbers, tuples, lists, dictionaries and sets<br /></li> \n <li>Comprehensions<br /></li> \n <li>Functions, including modules and import syntax<br /></li> \n <li>Classes and named tuples<br /></li> \n <li>Reflection<br /></li> \n <li>Regular expressions</li> \n</ul> \n<p>On top of this there will also be some special sessions on file IO, library usage, web frameworks, web scraping and APIs.</p> \n<p>You can see <a href=\"https://github.com/rrees/learning-python\">the repository that I use for the lessons</a> on GitHub and I plan to open source it once I have run through it completely with the first students.</p> \n<h2>Discovering the answers</h2> \n<p>Having got a rough idea of the topics writing the tests to illustrate the behaviour of the various data types and syntax turned out to be really hard. I discovered that there is a whole lot of Python I do not really use in my own programming.</p> \n<p>For example: what happens when you divide one by two (you get zero)? What happens when you put lambda into the projection of a list comprehension (you get a list of anonymous functions)? What order do decorators get executed in? What happens to an existing instance of an object when you redefine the class it substantiates?</p> \n<p>Sometimes I would anticipate things and have a test already written to show how something worked but part of the fun of working with an interactive language like Python is that often we could just dive into the shell during the session and find out what would happen together.</p> \n<p>Doing the lessons has turned out to be a great learning experience for me as well. I now know the <em>set literal</em> syntax, but only after I wrote entirely wrong syntax on a whiteboard. I also now know that <em>pass</em> behaves differently depending on where you put it, it is a function and a class all in one! I know a <em>lot</em> more about how Python provides object-orientation.</p> \n<p>I have had to really think about what I think makes for good Python programming and have tried to distil that insight into a few pieces of advice and some illustrations in code.</p> \n<p>You rarely think formally about your skills and knowledge in this way. Your colleagues also challenge you to explain why one approach is better than others so you cannot simply jazz-hands your way through. If something is good then you should be able to explain why it is better than the alternatives that other people might have used or seen in other codebases.</p> \n<p>I am looking forward to finishing my teaching and being able to attend some of the other classes but I have already had to improve what I thought I already knew. Teaching has provided a friendly but sceptical audience and through their questions a valuable way to learn and get better.</p> \n<h2>My advice for Python programmers</h2> \n<ul> \n <li>Functions are better tools for abstracting functionality than classes<br /></li> \n <li>Immutable data structures like tuples are easier to work with and avoid problems like writing values when you meant to read<br /></li> \n <li>Comprehensions are amazing, they do not mutate their input and they are usually fast and memory-efficient<br /></li> \n <li>Always use the module namespace for your own code, use the alias syntax to improve readability if you need to</li> \n</ul> \n<h2>Convenient lies</h2> \n<p>Here are a couple of things that I wish were true, but which I had to admit were false during the lessons:</p> \n<ul> \n <li>Python does not support multiple-inheritance<br /></li> \n <li>You have to name everything you want to import (<em>import *</em> does not exist!)</li> \n <li>Class members are private, honest</li> \n</ul> \n<h2>Great discoveries</h2> \n<p>Of course sometimes you think things are worse than they are and the truth is a lot better than you had hoped:</p> \n<ul> \n <li>You cannot set arbitrary attributes on collection datatypes<br /></li> \n <li>Generator functions can be used in comprehensions and they work just like iterators<br /></li> \n <li>The dictionary comprehension is available in Python 2.7</li> \n <li>I finally understand <a href=\"https://docs.python.org/2/reference/lexical_analysis.html\">raw strings</a> and what they are used for</li> \n</ul> \n<p><br /><em><br /></em></p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/9/1423489172989/6242015734_f2523a1d1e_o-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","credit":"flickr","altText":"Our in-house training focuses on peer to peer learning"}],"bodyImages":[],"webPublicationDate":"2015-03-30T11:20:01Z","lastModified":"2015-03-30T11:21:42Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Robert Rees","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/robert-rees"}],"feature":false,"keywords":["Technology","Programming","Computing"],"tags":[{"id":"technology/technology","webTitle":"Technology"},{"id":"technology/programming","webTitle":"Programming"},{"id":"technology/computing","webTitle":"Computing"}],"section":{"id":"info"},"topics":[{"displayName":"Robert Rees","topic":{"type":"tag-contributor","name":"profile/robert-rees"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/mar/30/the-best-way-to-learn-tech-is-to-teach-it","shortUrl":"http://gu.com/p/44d7c","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/mar/30/the-best-way-to-learn-tech-is-to-teach-it","webUri":"http://www.theguardian.com/info/developer-blog/2015/mar/30/the-best-way-to-learn-tech-is-to-teach-it"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/9/1423489172989/6242015734_f2523a1d1e_o-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Knight-Crane Convergence Lab <a href=\"https://www.flickr.com/photos/knightfoundation/6242015734/\">Photograph: /flickr</a>","credit":"flickr","altText":"Our in-house training focuses on peer to peer learning","cleanCaption":"Knight-Crane Convergence Lab <a href=\"https://www.flickr.com/photos/knightfoundation/6242015734/\">Photograph: /flickr</a>"}},"importance":3,"showQuotedHeadline":false,"sublinks":[]},{"title":"Upgrading Elasticsearch: Content API’s dual stack strategy","rawTitle":"Upgrading Elasticsearch: Content API’s dual stack strategy","item":{"type":"article","id":"info/developer-blog/2015/mar/26/upgrading-elasticsearch-content-apis-dual-stack-strategy","title":"Upgrading Elasticsearch: Content API’s dual stack strategy","trailText":"Evaluation and explanation of process used to upgrade Elasticsearch with Route53 and a dual stack strategy on the Content API team at the Guardian. ","standFirst":"<p>Evaluation and explanation of process used to upgrade Elasticsearch with Route53 and a dual stack strategy on the Content API team at the Guardian. </p>","byline":"Luke Taylor and Chris Birchall","body":"<p>Here on the <a href=\"http://open-platform.theguardian.com/\">Content API</a> team, we’ve recently had to upgrade <a href=\"https://www.elastic.co/products/elasticsearch\">Elasticsearch</a> on our cluster. The upgrade was especially painful because we were several major versions behind the latest (we were running Elasticsearch 1.1.1) meaning that we would need to recreate the Elasticsearch index. The reason for running such an old version was that we have been focused on stability over the last few months in light of the release of the new theguardian.com website, which meant avoiding potentially disruptive operations such as upgrades.<br /></p> \n<p>We set out with the following goals for our Elasticsearch upgrade:<br /></p> \n<ul> \n <li>zero downtime to any of our clients</li> \n <li>the ability to easily switch back in the event of any problems</li> \n <li>increased automation, to make it easier on whoever has to do this next (ha!)</li> \n</ul> \n<p>With these goals in mind, we decided to try out AWS’s Route 53 service.</p> \n<h2>Route 53</h2> \n<p>Route 53 is “a highly available and scalable cloud Domain Name System (DNS) web service” provided by Amazon Web Services. Effectively what this means is that it allows you to connect requests from your users to your applications (running on infrastructure inside or outside of AWS), with support for a variety of different routing strategies (latency-based routing, weighted round robin etc.)<br /></p> \n<p>Beyond our already heavy use of AWS and the fact that it plays nicely with our existing AWS infrastructure, we primarily decided on Route 53 because it gives us fine-grained control over what percentage of traffic goes where. This allows us, for example, to spin up a new stack on demand for a particularly risky change and direct a small percentage of traffic to it to test it out in the wild under production conditions. Or, in the case of our Elasticsearch upgrade, move all of our traffic to a replica stack so we can work on our existing stack in isolation, without fear of causing catastrophic problems in production.<br /></p> \n<p>This granular control of traffic means you can ramp up at your own pace while providing 0% downtime, with Route 53 respecting the TTL of the Elastic Load Balancers (60 seconds), allowing for quick failover in the event of an incident. Route 53 also provides us with the possibility of using round robin/blue-green deployment, something we are keen to consider at some point.<br /></p> \n<aside class=\"element element-pullquote\"> \n <blockquote> \n  <p>Granular control of traffic means you can ramp up at your own pace while providing 0% downtime.</p> \n  <footer> \n   <cite></cite> \n  </footer> \n </blockquote> \n</aside> \n<p>If you want to learn more about Amazon’s Route 53 you can view the documentation here: <a href=\"http://aws.amazon.com/documentation/route53/\">http://aws.amazon.com/documentation/route53/</a><br /></p> \n<h2>Upgrading Elasticsearch on the Content API</h2> \n<p>Our high level strategy for upgrading Elasticsearch with Route 53 was:<br /></p> \n<ol> \n <li>Create a new stack with the new Elasticsearch version.</li> \n <li>Populate that stack with all of the data matching the existing stack, whilst ensuring that both stacks are also receiving all new updates.</li> \n <li>Configure Route 53 to direct traffic to the new stack, ramping up slowly while monitoring for issues.</li> \n <li>Upgrade Elasticsearch on the existing stack.</li> \n <li>Point Route 53 back to the newly upgraded stack, ramping up slowly once again.</li> \n <li>After ensuring everything is running smoothly, delete the replica stack.</li> \n</ol> \n<h2>Difficulties experienced</h2> \n<p>Although using Route 53 has been beneficial in helping us upgrade Elasticsearch and minimize the impact on end users, we did have some difficulties. The most problematic issue was that many of our API clients did not respect the DNS record time to live (TTL) values being broadcast by Route 53. As we ramped up the ratio of traffic being directed to the replica stack, we quickly found with our internal monitoring tools that our Route 53 settings were not being reflected in the number of requests hitting the respective load balancers of each stack.<br /></p> \n<p>When clients receive DNS records from Route 53, those records come with a TTL (in our case, this was set to 60 seconds). So clients should only use an IP address for 60 seconds, before contacting the Route 53 DNS servers again to perform another DNS resolution. This means that when we tell Route 53 to route clients to a new stack, the change should take effect within 60 seconds. But this was not happening - some clients were ignoring the TTL of the DNS record and continuing to connect to the original stack indefinitely. This was worrying, as it means we can’t failover to a new stack quickly in the event of any problems with the current stack.<br /></p> \n<p>As we could see which API keys were hitting which load balancer, we are able to work out that the problem was not systematic, but rather specific to certain clients who were using our very own <a href=\"https://github.com/guardian/content-api-scala-client\">Content API Scala client</a>. This raised suspicions that the Scala client was over-zealously caching DNS records.<br /></p> \n<h2>How we Tested</h2> \n<p>The problem with troubleshooting this issue was that DNS caching can happen at so many levels of the stack. The Content API Scala client uses the <a href=\"https://github.com/dispatch/reboot\">Dispatch</a> HTTP client internally, which is built on top of <a href=\"https://github.com/AsyncHttpClient/async-http-client\">AsyncHttpClient</a>, which in turn uses Netty for its low-level HTTP processing. Moving further down the stack, the JRE also performs DNS caching (although it is only enabled under certain conditions) and the OS also has a DNS cache.</p> \n<p>We started at the bottom of the stack, checking that the OS was respecting the TTL of DNS records. This was pretty simple to test. We just set up a loop to send a request every few seconds using curl, changed the Route 53 settings, and checked that curl started connecting to the new IP address after 60 seconds.<br /></p> \n<figure class=\"element element-embed\" data-alt=\"Code sample.\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/LATaylor-guardian/eba99e74e89f421d72f3.js&quot;&gt;&lt;/script&gt;\"></iframe> \n</figure> \n<p>Having eliminated the OS, we looked at the Java runtime’s DNS caching functionality. After trawling through a lot of contradictory documentation and JDK source code, we decided that the JRE was not the culprit. Because we are not using a SecurityDispatcher, the JRE does not cache DNS records for more than 30 seconds.</p> \n<p>Finally we wrote a simple test harness for the Scala client. It used basically the same approach as we used to test the OS-level DNS cache above, but this time sending requests using the Scala client and using tcpdump to see what IP address the client was connecting to.</p> \n<h2>What we found</h2> \n<p>Hunting through the source code of Dispatch, AsyncHttpClient and Netty, we eventually narrowed it down to AsyncHttpClient. As a performance optimisation, AsyncHttpClient pools Netty channels for reuse. By default it expires an idle connection after 60 seconds, but if a connection is used more than once per minute then it will be pooled and reused indefinitely. Of course, most of the internal Guardian services that use the Content API make a lot more than one request per minute!</p> \n<h2>Resolution for the Content API Scala client</h2> \n<p>Luckily, this channel pooling behaviour is configurable, so it turned out to be <a href=\"https://github.com/guardian/content-api-scala-client/pull/65\">a one line fix</a>. We simply had to configure AsyncHttpClient not to reuse connections for more than 60 seconds.</p> \n<h2>Resolution for Other Clients</h2> \n<p>Besides the Content API Scala client, the same problem also occurred in a number of other applications, namely those using the Play framework’s ‘play-ws’ library. Like Dispatch, play-ws uses AsyncHttpClient internally, so these applications needed to be fixed in the same way.</p> \n<p>Unfortunately Play does not make it possible to access the configuration parameter that we need to set, so we wrote <a href=\"https://github.com/cb372/play-configurable-ningwsplugin\">a Play plugin</a> that does. We’ve also made a pull request to the Play framework to make this possible without a plugin in future.</p> \n<h2>Conclusions</h2> \n<p>Overall, we’re somewhat sceptical that Route 53 as an out-of-the-box solution is the right one for us going forward. As most of the heavy consumers of the Content API reside internally at the Guardian and therefore use the <a href=\"https://github.com/guardian/content-api-scala-client\">Scala client</a> for the Content API, we can ensure that the DNS TTLs are respected by a majority of clients. And this also rings true for those external clients using the latest version of the Scala client (which we most certainly recommend). But for those who choose not to use the Scala client and roll their own solution, we have no guarantee that they will respect the TTLs of our DNS records. </p> \n<p>Now that we have rolled out our update to the Content API Scala client, we have an effective means for upgrading Elasticsearch for the time being in a manner that satisfies the needs of the Guardian. But as the Content API becomes more and more widely used externally, the need for a more resilient solution will only continue to grow. </p> \n<p>An alternative solution that would give us more control would be to place a proxy server such as <a href=\"http://www.haproxy.org/\">HAProxy</a> in front of our stacks. This would allow us to route traffic dynamically, with the bonus that any routing changes can be applied instantly. But it comes with an operations overhead, as it is one more system to maintain. It’s also a potentially dangerous single point of failure, as a typo in the proxy server’s configuration file could stop any traffic from reaching our API.</p> \n<p>If there are any other solutions for zero-downtime, granular cross-stack routing on AWS, we’d love to hear about them! Please let us know in the comments, the <a href=\"https://groups.google.com/forum/#!forum/guardian-api-talk\">Guardian API Google group</a> or contact us on <a href=\"https://twitter.com/openplatform\">Twitter</a>.</p>","section":"Info","displayImages":[],"bodyImages":[],"webPublicationDate":"2015-03-26T14:56:03Z","lastModified":"2015-06-05T11:35:41Z","metadata":{"commentable":true,"commentCount":1,"contributors":[{"name":"Luke Taylor","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/luke-taylor"},{"name":"Chris Birchall","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/chris-birchall"}],"feature":false,"keywords":["Technology","Programming","Cloud computing","Computing","Internet"],"tags":[{"id":"technology/technology","webTitle":"Technology"},{"id":"technology/programming","webTitle":"Programming"},{"id":"technology/cloud-computing","webTitle":"Cloud computing"},{"id":"technology/computing","webTitle":"Computing"},{"id":"technology/internet","webTitle":"Internet"}],"section":{"id":"info"},"displayHint":"technical","topics":[],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/mar/26/upgrading-elasticsearch-content-apis-dual-stack-strategy","shortUrl":"http://gu.com/p/47xvx","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/mar/26/upgrading-elasticsearch-content-apis-dual-stack-strategy","webUri":"http://www.theguardian.com/info/developer-blog/2015/mar/26/upgrading-elasticsearch-content-apis-dual-stack-strategy"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/3/25/1427302497657/d12e6983-1fa1-4baa-ad87-8417dfdd94fa-680x1020.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1020,"width":680,"orientation":"portrait","caption":"Content API's infamous lego tower. Photograph: Digital Development at the Guardian","credit":"Digital Development at the Guardian","altText":"Content API lego tower","cleanCaption":"Content API's infamous lego tower.","cleanCredit":"Photograph: Digital Development at the Guardian"}},"importance":3,"showQuotedHeadline":false,"sublinks":[]},{"title":"Android Subtle Prompt library","rawTitle":"Android Subtle Prompt library","item":{"type":"article","id":"info/developer-blog/2015/mar/06/android-subtle-prompt-library","title":"Android Subtle Prompt library","trailText":"How to create a Guardian style subtle prompt to highlight your new features","standFirst":"<p>How to create a Guardian style subtle prompt to highlight your new features</p>","byline":"Jesús Gumiel","body":"<p>Sometimes the difference between a brilliant feature and one that nobody will use is a simple detail. Not an algorithm, not the quality of the code, nor how easy it can make the life of users. You can develop the best feature in the world, but if nobody knows about it, you’ve got nothing.</p> \n<p>That thought was at the top of our minds a few months ago, when we faced the challenge of showing the users what’s new on the Guardian mobile app. And believe me, something so simple (in theory), can be quite tricky if you want to do it well.</p> \n<p>There are some common patterns to achieve this target:</p> \n<ul> \n <li><strong>Classic dialogs</strong> (small ones). Everybody hates them, they interrupt you while you’re interacting with the app, and oblige you to focus on something which you’re probably not interested in. As result, the majority of users just dismiss them without paying any attention to the content, and probably feel irritated with the developer for the interruption.<br /></li> \n <li><strong>Full screen dialogs</strong>. These have been quite popular recently. The user experience is better using a full screen display, and an attractive experience is always better received. The negatives, however, are the same as in the case of its smaller brother.<br /></li> \n <li><strong>Third party libraries</strong> like <a href=\"http:\">ShowcaseView</a>. This library was quite popular at one point, but it’s starting to be forgotten by developers. The main advantage was the feeling of being something native, like part of the operating system, and the way it focuses the attention on important UI elements. However it is also disruptive to the user’s flow and therefore feels intrusive.<br /></li> \n</ul> \n<p>These were the criteria we had when we started the work: It should be clear but non-intrusive, beautiful and effective. And this was the idea our wonderful UX team proposed. They called it <strong>subtle prompts</strong>.</p> \n<figure class=\"element element-video\" data-canonical-url=\"http://www.youtube.com/watch?v=Rg3h42OxepE\"> \n <iframe width=\"460\" height=\"345\" src=\"https://www.youtube.com/embed/Rg3h42OxepE?wmode=opaque&amp;feature=oembed\" frameborder=\"0\" allowfullscreen=\"\"></iframe> \n <figcaption>\n  Subtle prompt on The Guardian App\n </figcaption> \n</figure> \n<p>The idea is to show an inline prompt at the top of the page pointing to the action bar button that allows you to access the new feature. The prompt contains a simple explanation of the feature, and can be dismissed either explicitly through clicking, or implicitly by scrolling down the page. The prompt itself slides into view smoothly, while an additional animation makes the button it is pointing to ‘pop’ to attract the attention of the user. Simple, clean and effective.</p> \n<p>When we were developing the subtle prompt code, we felt it would be useful enough to create a library with it. In our app we have different kinds of subtle prompts: one for expandable lists and another for webviews. Sometimes they are attached to an action button, at other times they simply notify the user about a feature without being directly attached to a UI element. Different UX, with images, without them... this certainly seemed like a good candidate for a standard library, easy to reuse and extend, to cover all our requirements.</p> \n<p>Of course, at the Guardian, ‘be open’ is one of our guiding principles, so we made the library public so any Android developer can use it. <a href=\"https://github.com/guardian/android-subtle-prompts\">Here is the GitHub project.</a></p> \n<p>Let’s look at how to implement our save for later articles subtle prompt. This example shows a subtle prompt with an image, that appears attached to an animated action button.</p> \n<p>In this case, the subtle prompt appears on an ExpandableList. This is probably the more difficult case, as we have to add the prompt as a header, and manage the scrolling.</p> \n<p>We use our Helper class to create the type of subtle prompt we need. In this case, on a ExpandableList:</p> \n<figure class=\"element element-embed\" data-alt=\"Creating subtle prompt\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/jegumi/0d046d907b5ee2e7b071.js&quot;&gt;&lt;/script&gt;\"></iframe> \n <figcaption>\n  Creating subtle prompt\n </figcaption> \n</figure> \n<p>Now we assign some custom values: The view to animate, a listener to be notified when the prompt collapses, the text on the prompt and the different states of the animated button.</p> \n<figure class=\"element element-embed\" data-alt=\"Customising subtle prompt\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/jegumi/f076b988a1719bf312c3.js&quot;&gt;&lt;/script&gt;\"></iframe> \n <figcaption>\n  Customising subtle prompt\n </figcaption> \n</figure> \n<p>Our prompt includes some body text and an image, as well as the title, so we add them.</p> \n<figure class=\"element element-embed\" data-alt=\"Adding body text and an image to the prompt\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/jegumi/2ba12f6bb4affcd67abf.js&quot;&gt;&lt;/script&gt;\"></iframe> \n <figcaption>\n  Adding body text and an image to the prompt\n </figcaption> \n</figure> \n<p>We use a custom drawable for the ‘close’ button of our subtle prompt.</p> \n<figure class=\"element element-embed\" data-alt=\"Customising subtle prompt\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/jegumi/f271bb9ea6ab6fcc4edd.js&quot;&gt;&lt;/script&gt;\"></iframe> \n <figcaption>\n  Customising subtle prompt\n </figcaption> \n</figure> \n<p>And this would be an example of the listener we assigned on the first step. The listener allows us to control what happens when the subtle prompt is collapsed. For example, we could save some data to preferences.</p> \n<figure class=\"element element-embed\" data-alt=\"The listener will control the events closing the prompt\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/jegumi/0cd0c88530debc25f0c4.js&quot;&gt;&lt;/script&gt;\"></iframe> \n <figcaption>\n  The listener will control the events closing the prompt\n </figcaption> \n</figure> \n<p>It is possible to programatically dismiss a prompt by calling collapsePrompt – for instance, when the user scrolls, we could call it from within a scroll listener.</p> \n<figure class=\"element element-embed\" data-alt=\"Managing scrolling to dismiss the prompt\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/jegumi/8ab1bdae95865321efeb.js&quot;&gt;&lt;/script&gt;\"></iframe> \n <figcaption>\n  Managing scrolling to dismiss the prompt\n </figcaption> \n</figure> \n<p>There are lots of options to customise your subtle prompt: typeface, padding, margins, etc. Visit our public repo on <a href=\"https://github.com/guardian/android-subtle-prompts\">GitHub</a> and give it a try.</p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/23/1424705087655/ff7d5932-c444-4b53-a7d8-936fb287fa0d-bestSizeAvailable.png?width=#{width}&height=#{height}&quality=#{quality}","height":369,"width":615,"orientation":"landscape","credit":"Android app screenshot","altText":"Subtle prompt on the Guardian’s Android app.","cleanCredit":"Photograph: Android app screenshot"}],"bodyImages":[],"webPublicationDate":"2015-03-06T14:24:21Z","lastModified":"2015-03-06T14:28:14Z","metadata":{"commentable":false,"commentCount":0,"contributors":[],"feature":false,"keywords":["Android","Software"],"tags":[{"id":"technology/android","webTitle":"Android"},{"id":"technology/software","webTitle":"Software"}],"section":{"id":"info"},"topics":[],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/mar/06/android-subtle-prompt-library","shortUrl":"http://gu.com/p/463tj","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/mar/06/android-subtle-prompt-library","webUri":"http://www.theguardian.com/info/developer-blog/2015/mar/06/android-subtle-prompt-library"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/23/1424705087655/ff7d5932-c444-4b53-a7d8-936fb287fa0d-bestSizeAvailable.png?width=#{width}&height=#{height}&quality=#{quality}","height":369,"width":615,"orientation":"landscape","caption":"Subtle prompt on the Guardian’s Android app.","credit":"Android app screenshot","altText":"Subtle prompt on the Guardian’s Android app.","cleanCaption":"Subtle prompt on the Guardian’s Android app."}},"importance":4,"showQuotedHeadline":false,"sublinks":[]},{"title":"Guardian Hack Day February 2015 – liveblog","rawTitle":"Guardian Hack Day February 2015 – liveblog","item":{"type":"liveBlog","id":"info/developer-blog/live/2015/feb/26/guardian-hack-day-february-2015-liveblog","title":"Guardian Hack Day February 2015 – liveblog","trailText":"It’s that time again – the Guardian’s Digital Development team is having its quarterly Hack Day. Follow along to see what gets built (and how much coffee gets drunk)","standFirst":"<p>It’s that time again – the Guardian’s Digital Development team is having its quarterly Hack Day. Follow along to see what gets built (and how much coffee gets drunk)</p>","byline":"Matt Andrews","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/26/1424949196409/7fb17aa3-4b4c-4a93-aac0-ab3e2419c6d5-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","credit":"Rob Phillips/Guardian","altText":"The Guardian's Digital Development team (plus guests) listening to opening presentations","cleanCredit":"Photograph: Rob Phillips/Guardian"}],"bodyImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/27/1425055023933/5ca93eee-c91b-4748-8e2e-cb99a6baa283-1020x612.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"Stephan Fowler demos the all new live column on the Guardian homepage Photograph: Helene Sears","credit":"Helene Sears","altText":"Hackday presentations","cleanCaption":"Stephan Fowler demos the all new live column on the Guardian homepage","cleanCredit":"Photograph: Helene Sears"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/27/1425054296138/67f69bb0-ff7c-4f0c-864a-bbfe8bc02c38-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Nightvision 2.0 Photograph: Helene Sears","credit":"Helene Sears","altText":"Hackday presentations","cleanCaption":"Nightvision 2.0","cleanCredit":"Photograph: Helene Sears"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/27/1425053335882/1a25e5e5-24b4-4e8d-b3b2-71c1067ab753-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Flow Rider presentation Photograph: Helene Sears","credit":"Helene Sears","altText":"Hackday presentations","cleanCaption":"Flow Rider presentation","cleanCredit":"Photograph: Helene Sears"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/27/1425052594842/a59ead95-702c-4464-b7a0-e460bd108dfc-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Catch up on big stories Photograph: Helene Sears","credit":"Helene Sears","altText":"Catch up on big stories","cleanCaption":"Catch up on big stories","cleanCredit":"Photograph: Helene Sears"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/27/1425053222137/f5a1ad16-72d0-46d5-b87e-225488a69b56-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Dominic Kendrick’s climate change hack Photograph: Dominic Kendrick","credit":"Dominic Kendrick","altText":"Dominic Kendrick's climate change hack","cleanCaption":"Dominic Kendrick’s climate change hack","cleanCredit":"Photograph: Dominic Kendrick"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/4cd2f545d80165c3ea653f2da6b0f6eea96c4932/0_221_3264_1960/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1201,"width":2000,"orientation":"landscape","caption":"The kind coffee chaps from Noble Espresso Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"The kind coffee chaps from Noble Espresso","cleanCaption":"The kind coffee chaps from Noble Espresso","cleanCredit":"Photograph: Matt Andrews/Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/845c7751c1555458bdf67b8db327acb20f019d98/0_307_3264_1959/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","caption":"Guardian developers planning something Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"Guardian developers planning something","cleanCaption":"Guardian developers planning something","cleanCredit":"Photograph: Matt Andrews/Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/d813e50f8a015891e2c94909e63c58924ed08ee6/0_411_3264_1959/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","caption":"Helene Sears leading a masterclass on presentation skills Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"Helene Sears leading a masterclass on presentation skills","cleanCaption":"Helene Sears leading a masterclass on presentation skills","cleanCredit":"Photograph: Matt Andrews/Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/b12ddea88370f33628522963a1e932d232db3db4/0_327_3264_1958/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","caption":"The three hack day trophies Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"The three hack day trophies","cleanCaption":"The three hack day trophies","cleanCredit":"Photograph: Matt Andrews/Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/05908fd11dd700a189424540cda374380c774884/0_396_3264_1958/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","caption":"A few of our team relaxing Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"A few of our team relaxing","cleanCaption":"A few of our team relaxing","cleanCredit":"Photograph: Matt Andrews/Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/2a13a3b64718ba488e270705a141473f99914bab/0_0_3264_2421/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1483,"width":2000,"orientation":"landscape","caption":"Jenny demonstrating her hack plan (with a cheeky Will “haircut” Franklin in the background) Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"Jenny demonstrating her hack plan (with a cheeky Will “haircut” Franklin in the background)","cleanCaption":"Jenny demonstrating her hack plan (with a cheeky Will “haircut” Franklin in the background)","cleanCredit":"Photograph: Matt Andrews/Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/292776178e8b97f08557c09e56b068bfc94d7d5a/0_0_960_984/488.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":500,"width":488,"orientation":"portrait","caption":"A software architecture diagram, yesterday Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"A software architecture diagram, yesterday","cleanCaption":"A software architecture diagram, yesterday","cleanCredit":"Photograph: Matt Andrews/Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/2799bfb442923dcc0c1bb81e95ef6ea9d5abc88a/0_300_3264_1958/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","caption":"A creative way to attract potential hackers to work on your project Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"A creative way to attract potential hackers to work on your project","cleanCaption":"A creative way to attract potential hackers to work on your project","cleanCredit":"Photograph: Matt Andrews/Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/b61da3f659513a3421dd57ce340d3f35c70ff99a/0_277_3264_1958/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","caption":"Just a few of the bags of Korrito’s Korean food before the hungry Guardian staff wolfed it all down Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"Just a few of the bags of Korrito’s Korean food before the hungry Guardian staff wolfed it all down","cleanCaption":"Just a few of the bags of Korrito’s Korean food before the hungry Guardian staff wolfed it all down","cleanCredit":"Photograph: Matt Andrews/Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/f8a61d5be3712ccc8ce0784dc82fd8bc43a58606/0_277_3264_1958/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","caption":"Guardian staff members discussing ideas for their hack projects Photograph: Matt Andrews/Guardian","credit":"Matt Andrews/Guardian","altText":"Guardian staff members discussing ideas for their hack projects","cleanCaption":"Guardian staff members discussing ideas for their hack projects","cleanCredit":"Photograph: Matt Andrews/Guardian"}],"webPublicationDate":"2015-02-27T20:57:41Z","lastModified":"2015-02-28T21:43:49Z","metadata":{"commentable":true,"commentCount":16,"contributors":[{"name":"Matt Andrews","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/matt-andrews"}],"feature":false,"keywords":["Technology"],"tags":[{"id":"technology/technology","webTitle":"Technology"}],"section":{"id":"info"},"displayHint":"news","topics":[],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#b51800","navigationDownColour":"#cc2b12","ruleColour":"#b51800","liveBlogLabelColour":"#333333","headlineColour":"#333333","standfirstColour":"#676767","updateColour":"#999999","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#cc2b12","colourPalette":"deadBlog"},"liveContent":{"liveBloggingNow":false,"blocks":[{"id":"block-54eeff63e4b0d8e22cb8e69a","publishedDateTime":"2015-02-26T11:13:27Z","body":"<p>We are off for Guardian Hack Day February 2015! Now to launch this blog...</p>","postType":"blog"},{"id":"block-54ef0077e4b08ec7379dc47f","publishedDateTime":"2015-02-26T11:17:26Z","body":"<p>We’re being hosted in the beautiful surroundings of <a href=\"http://shoreditchtownhall.com/\">Shoreditch Town Hall</a>, a Grade II listed building. Right now, our hundred-strong team are engaged in an ideas session, brainstorming concepts and ideas about what the Guardian can do digitally to continue to innovate and experiment on the web. And probably some stuff with robots, too.</p>","postType":"blog"},{"id":"block-54ef023be4b09d0edf204a09","publishedDateTime":"2015-02-26T11:23:49Z","body":"<figure class=\"element element-image\" data-media-id=\"f8a61d5be3712ccc8ce0784dc82fd8bc43a58606\"> \n <img src=\"http://media.guim.co.uk/f8a61d5be3712ccc8ce0784dc82fd8bc43a58606/0_277_3264_1958/1000.jpg\" alt=\"Guardian staff members discussing ideas for their hack projects\" width=\"1000\" height=\"600\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Guardian staff members discussing ideas for their hack projects</span> \n  <span class=\"element-image__credit\">Photograph: Matt Andrews/Guardian</span> \n </figcaption> \n</figure>","postType":"blog"},{"id":"block-54ef08f3e4b08ec7379dc489","publishedDateTime":"2015-02-26T11:53:24Z","body":"<p>We’ve just finished pitching back the initial ideas and heard some fascinating things, including quizzes, mobile analytics, “save-for-later” across all your devices and something mysterious about “sliders”. Watch this space.</p>","postType":"blog"},{"id":"block-54ef0937e4b0d8e22cb8e6a3","publishedDateTime":"2015-02-26T11:53:59Z","body":"<p>We’ve also had a clue from our developer Patrick Hamann about his plans for the day – sounds like there’s something around offline reading happening in at least one team.</p> \n<figure class=\"element element-tweet\" data-canonical-url=\"https://twitter.com/patrickhamann/statuses/570911161673256960\"> \n <blockquote class=\"twitter-tweet\"> \n  <p>Today I will mostly be hacking around with ServiceWorker and the Push API at the <a href=\"https://twitter.com/gdndevelopers\">@gdndevelopers</a> hack day <a href=\"https://twitter.com/hashtag/guhackday13?src=hash\">#guhackday13</a></p>— Patrick Hamann (@patrickhamann) \n  <a href=\"https://twitter.com/patrickhamann/status/570911161673256960\">February 26, 2015</a> \n </blockquote> \n</figure>","postType":"blog"},{"id":"block-54ef0a0de4b011581586e2d6","publishedDateTime":"2015-02-26T11:57:28Z","body":"<p>Here’s a lovely photo of our brilliant venue before our team arrived and filled it full of discarded coffee cups and laptops:</p> \n<figure class=\"element element-tweet\" data-canonical-url=\"https://twitter.com/JonHW87/statuses/570876791239385088\"> \n <blockquote class=\"twitter-tweet\"> \n  <p>Stunning hack space for the first Guardian hack days of 2015 <a href=\"https://twitter.com/hashtag/guhackday15?src=hash\">#guhackday15</a> <a href=\"http://t.co/iykSQfaMlD\">pic.twitter.com/iykSQfaMlD</a></p>— Jon H-W (@JonHW87) \n  <a href=\"https://twitter.com/JonHW87/status/570876791239385088\">February 26, 2015</a> \n </blockquote> \n</figure>","postType":"blog"},{"id":"block-54ef0a77e4b0c60f7be311ed","publishedDateTime":"2015-02-26T11:59:32Z","body":"<p>Here’s another shot of a team in action working on a hack idea around climate change: </p> \n<figure class=\"element element-tweet\" data-canonical-url=\"https://twitter.com/lahnabee/statuses/570904990551707648\"> \n <blockquote class=\"twitter-tweet\"> \n  <p>The climate change hack team <a href=\"https://twitter.com/guardian\">@Guardian</a> <a href=\"https://twitter.com/hashtag/guhackday15?src=hash\">#guhackday15</a> <a href=\"http://t.co/YbFO6TadKc\">pic.twitter.com/YbFO6TadKc</a></p>— Nabeelah (@lahnabee) \n  <a href=\"https://twitter.com/lahnabee/status/570904990551707648\">February 26, 2015</a> \n </blockquote> \n</figure>","postType":"blog"},{"id":"block-54ef1990e4b0d8e22cb8e6bc","title":"Food!","publishedDateTime":"2015-02-26T13:05:12Z","lastUpdatedDateTime":"2015-02-27T15:54:30Z","body":"<p>Lunchtime is wrapping up here as hacking begins in earnest. We’re being fed Korrito who have delivered us a huge array of delicious Korean food:</p> \n<figure class=\"element element-image\" data-media-id=\"b61da3f659513a3421dd57ce340d3f35c70ff99a\"> \n <img src=\"http://media.guim.co.uk/b61da3f659513a3421dd57ce340d3f35c70ff99a/0_277_3264_1958/1000.jpg\" alt=\"Just a few of the bags of Korrito’s Korean food before the hungry Guardian staff wolfed it all down\" width=\"1000\" height=\"600\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Just a few of the bags of Korrito’s Korean food before the hungry Guardian staff wolfed it all down</span> \n  <span class=\"element-image__credit\">Photograph: Matt Andrews/Guardian</span> \n </figcaption> \n</figure>","postType":"key-event"},{"id":"block-54ef1a17e4b0d8e22cb8e6c1","publishedDateTime":"2015-02-26T13:06:02Z","body":"<p>One of our editorial colleagues, Lexy Topping, is hacking along with us today. She’s just posted this Vine clip showing a hint of the action here at Shoreditch Town Hall:</p> \n<figure class=\"element element-tweet\" data-canonical-url=\"https://twitter.com/LexyTopping/statuses/570929075394633728\"> \n <blockquote class=\"twitter-tweet\"> \n  <p>It's all going on at <a href=\"https://twitter.com/hashtag/guhackday15?src=hash\">#guhackday15</a>. <a href=\"https://t.co/PU921r3drt\">https://t.co/PU921r3drt</a></p>— Alexandra Topping (@LexyTopping) \n  <a href=\"https://twitter.com/LexyTopping/status/570929075394633728\">February 26, 2015</a> \n </blockquote> \n</figure>","postType":"blog"},{"id":"block-54ef235be4b0c60f7be3122e","publishedDateTime":"2015-02-26T13:45:14Z","body":"<p>Hacking is in full flow: here’s what some of our journalists are working on:</p> \n<figure class=\"element element-tweet\" data-canonical-url=\"https://twitter.com/MateerS/statuses/570938172189908992\"> \n <blockquote class=\"twitter-tweet\"> \n  <p><a href=\"https://twitter.com/LauraOliver\">@LauraOliver</a> <a href=\"https://twitter.com/subhajitb\">@subhajitb</a> working on quizzes at the hackday! <a href=\"https://twitter.com/hashtag/guhackday15?src=hash\">#guhackday15</a> <a href=\"http://t.co/1FLkMeccRP\">pic.twitter.com/1FLkMeccRP</a></p>— Helene Sears (@MateerS) \n  <a href=\"https://twitter.com/MateerS/status/570938172189908992\">February 26, 2015</a> \n </blockquote> \n</figure>","postType":"blog"}],"keyEvents":[],"paginationLinks":{"newer":"http://live-blogs.mobile-apps.guardianapis.com/newer/info/developer-blog/live/2015/feb/26/guardian-hack-day-february-2015-liveblog?date=2015-02-26T13:45:14Z"}},"links":{"uri":"http://live-blogs.mobile-apps.guardianapis.com/items/info/developer-blog/live/2015/feb/26/guardian-hack-day-february-2015-liveblog","shortUrl":"http://gu.com/p/466bd","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/live/2015/feb/26/guardian-hack-day-february-2015-liveblog","webUri":"http://www.theguardian.com/info/developer-blog/live/2015/feb/26/guardian-hack-day-february-2015-liveblog"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/26/1424949196409/7fb17aa3-4b4c-4a93-aac0-ab3e2419c6d5-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"The Guardian’s Digital Development team (plus guests) listening to opening presentations Photograph: Rob Phillips/Guardian","credit":"Rob Phillips/Guardian","altText":"The Guardian's Digital Development team (plus guests) listening to opening presentations","cleanCaption":"The Guardian’s Digital Development team (plus guests) listening to opening presentations","cleanCredit":"Photograph: Rob Phillips/Guardian"}},"importance":4,"showQuotedHeadline":false,"sublinks":[]},{"title":"Fullstack 2014 - conference report","rawTitle":"Fullstack 2014 - conference report","item":{"type":"article","id":"info/developer-blog/2015/feb/19/fullstack-2014","title":"Fullstack 2014 - conference report","trailText":"Fullstack 2014: JavaScript everywhere","standFirst":"<p>The Fullstack conference saw Douglas Crockford giving an overview of ES6 and his views on how to use the new features to write better JavaScript and Jamund Ferguson made abstract syntax trees exciting.</p>","byline":"Robert Rees","body":"<p>Last year I got to attend the <a href=\"https://skillsmatter.com/conferences/6361-fullstack-node-and-javascript-conference\">Fullstack conference</a> that was conveniently located in <a href=\"http://www.kingsplace.co.uk/\">Kings Place</a>, the same building as the Guardian.</p> \n<h2>Fullstack?</h2> \n<p>A number of colleagues commented before we even went to the conference that the title was a complete misnomer. So let’s get that out of the way first.</p> \n<p>The conference was programmed by a <a href=\"http://nodejs.org/\">Node</a> conference organiser and the talks reflected that perspective. Most of the talks had a small diversion into microservices or mentioned fullstack responsibility to justify their inclusion but really this conference was about JavaScript and Node.</p> \n<p>However, organisers Skillsmatter have promised that <a href=\"https://skillsmatter.com/conferences/6612-fullstack-the-conference-on-node-javascript-html5-hackable-electronics\">next year’s conference</a> will be focussed squarely on fullstack concerns rather than particular technologies. In the interests of disclosure, I have also been invited to be part of the organising committee so if that doesn’t happen then I will only have myself to blame.</p> \n<h2>Douglas Crockford on ES6</h2> \n<p>The conference opened with a keynote by Douglas Crockford talking about how the <a href=\"https://github.com/lukehoban/es6features\">ES6</a> standard is going to change the way that JavaScript is developed.</p> \n<p>In an interesting parallel with Java, ES6 adds to the language but does not deprecate anything – in fact, a lot of the features are actually <a href=\"http://en.wikipedia.org/wiki/Syntactic_sugar\">syntactic sugar</a>. While retaining backwards compatibility can be useful it brings with it the problem that all the old ways of doing things remain valid and need to be understood on top of the new ways.</p> \n<p>One of the things I think it would be good to break backwards-compatibility on is the definition of variables. The new <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let\">let form</a> has more intuitive scoping rules that would rule out a certain type of programming error for people unfamiliar with JavaScript. These kind of breaking changes would make it easier for general programmers to adopt server-side JavaScript.</p> \n<p>One of the most interesting sections of the talk was when Crockford talked about the way he has changed his programming style. He said that he has stopped using <em>this</em> and <em>null</em>. For the latter he prefers to use the value <em>undefined </em>which makes the code more explicit<em>.</em></p> \n<p>He also mentioned that he no longer uses imperative loops but instead sequence functions like <em>forEach</em>, <em>map</em> and <em>filter</em>. These are easier to understand and less error-prone than imperative loops. However in other talks we also heard that performance is worse for these constructs because the virtual machines don’t optimise the loops. Hopefully that is something that can change in future.</p> \n<p>The final aspect of the way he writes code is finding a way between object-oriented and prototype inheritance (the review of why JavaScript uses prototypal inheritance in the talk is quite interesting).</p> \n<p>Objects always take objects (spec) in their constructors rather than individual arguments and return a frozen Object. Methods on the object are either declared directly or generated by taking the parent’s spec and repeating the process on another object, which returns methods that are bound into the returned scope.</p> \n<p>While the example code makes use of ES6 constructs, <a href=\"http://weblogs.asp.net/bleroy/crockford%E2%80%99s-2014-object-creation-pattern\">this blog post</a> not only describes the pattern better than I do but also translates it into ES5. The pattern feels a lot better than the <em>class</em> syntax sugar that is also available in ES6.</p> \n<p>The FullStack videos require a login to view but here’s pretty much the same talk (JavaScript: the Better Parts) from <a href=\"http://nordicjs.com/\">Nordic.js</a> which is available on YouTube.</p> \n<figure class=\"element element-video\" data-canonical-url=\"http://www.youtube.com/watch?v=PSGEjv3Tqo0\"> \n <iframe width=\"460\" height=\"259\" src=\"https://www.youtube.com/embed/PSGEjv3Tqo0?wmode=opaque&amp;feature=oembed\" frameborder=\"0\" allowfullscreen=\"\"></iframe> \n <figcaption>\n  Douglas Crockford: JavaScript the Better Parts\n </figcaption> \n</figure> \n<h2>Highlight talk: JavaScript and AST</h2> \n<p>Apart from the keynote, the <a href=\"https://skillsmatter.com/skillscasts/5778-don-t-be-scared-of-abstract-syntax-trees\">big standout talk</a> for me was by <a href=\"https://github.com/xjamundx\">Jamund Ferguson</a> on the subject of <a href=\"http://en.wikipedia.org/wiki/Abstract_syntax_tree\">abstract syntax trees</a> (AST).</p> \n<p>All computer languages can be compiled into an abstract syntax tree, a kind of intermediate representation that is usually turned into the binary code . One advantage of using an AST is that the representation is a full-blown tree data structure and therefore can read and manipulated programmatically. Scala’s macro system, for example, takes advantage of exactly this kind of functionality.</p> \n<p>I hadn’t been aware of all the interesting libraries there are for generating and manipulating the AST syntax for JavaScript. Jamund used the example of using them to create better <a href=\"http://en.wikipedia.org/wiki/Lint_%28software%29\">linting</a> for code.</p> \n<p>Instead of having to match the code as strings against regular expressions, a checker can scan through the tree and apply rules to syntactically correct sections of the code such as functions, parameter names and arithmetic expressions.</p> \n<p>Libraries mentioned included <a href=\"http://esprima.org/\">Esprima</a> (<a href=\"https://github.com/ariya/esprima\">GitHub</a>), which, inevitably, has a few forks of interest: <a href=\"https://github.com/eslint/espree\">Espree</a> (for ES6) and <a href=\"https://github.com/facebook/esprima\">Facebook’s version</a> which is used in the translation of React’s JSX. Both are more actively maintained than the original project.</p> \n<p>For transformers (things that take an AST, change it and return a updated tree) <a href=\"https://github.com/substack/node-falafel\">Falafel</a> and <a href=\"https://github.com/benjamn/recast\">Recast</a> were mentioned. Falafel seems to focus on making the transforms simple whereas Recast seems more ambitious but also more low-level with the examples showing a lot of low-level AST tweaking which implies a good understanding of the API. The Recast use-case of generating source maps looks pretty interesting.</p> \n<p>Jamund’s talk stood out for me in that it was about something a little niche, something that I wasn’t aware of, that he was personally very enthusiastic about and while grounded in the practical example of his own use case also took the time to review the broader subject and its implications. A great conference talk.</p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2014/10/28/1414540744082/12771091013_4cb7233bb5_o-bestSizeAvailable.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":369,"width":615,"orientation":"landscape","caption":"What a real tiered architecture should look like <a href=\"https://www.flickr.com/photos/spitalfields-e1/12771091013/\">Photograph: /flickr</a>","credit":"flickr","altText":"A stack of fruit and American pancakes","cleanCaption":"What a real tiered architecture should look like <a href=\"https://www.flickr.com/photos/spitalfields-e1/12771091013/\">Photograph: /flickr</a>"}],"bodyImages":[],"webPublicationDate":"2015-02-19T12:44:34Z","lastModified":"2015-02-19T12:48:42Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Robert Rees","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/robert-rees"}],"feature":false,"keywords":["Programming","Computing"],"tags":[{"id":"technology/programming","webTitle":"Programming"},{"id":"technology/computing","webTitle":"Computing"}],"section":{"id":"info"},"topics":[{"displayName":"Robert Rees","topic":{"type":"tag-contributor","name":"profile/robert-rees"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/feb/19/fullstack-2014","shortUrl":"http://gu.com/p/42p3b","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/feb/19/fullstack-2014","webUri":"http://www.theguardian.com/info/developer-blog/2015/feb/19/fullstack-2014"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2014/10/28/1414540744082/12771091013_4cb7233bb5_o-bestSizeAvailable.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":369,"width":615,"orientation":"landscape","caption":"What a real tiered architecture should look like <a href=\"https://www.flickr.com/photos/spitalfields-e1/12771091013/\">Photograph: /flickr</a>","credit":"flickr","altText":"A stack of fruit and American pancakes","cleanCaption":"What a real tiered architecture should look like <a href=\"https://www.flickr.com/photos/spitalfields-e1/12771091013/\">Photograph: /flickr</a>"}},"importance":5,"showQuotedHeadline":false,"sublinks":[]},{"title":"Compile-to-JavaScript languages","rawTitle":"Compile-to-JavaScript languages","item":{"type":"article","id":"info/developer-blog/2015/feb/17/compile-to-javascript-languages","title":"Compile-to-JavaScript languages","trailText":"What’s the future for languages that compile to JavaScript?","standFirst":"","byline":"Hugo Gibson","body":"<p>There are a lot of <a href=\"https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS\">languages </a>that compile to JavaScript these days. So many, in fact, it’s impossible to keep track. A new language promising to preserve the JavaScript ecosystem while giving all the benefits of language <a href=\"http://www.scala-js.org/\">X</a> crops up almost every week. In fact, the rapid emergence of these languages seems to suggest that a replacement (or <a href=\"http://betterjs.org/\">enhancement</a>) for JavaScript is needed.</p> \n<p>These languages aim to satisfy a number of different goals. Some claim to be about making JavaScript more <a href=\"http://coffeescript.org/\">sane</a> i.e. keeping the dynamic typing and first class functions (arguably the defining features of the languages) while tidying up the pieces that no one uses or wants to use. Others are all about adding types to JavaScript. Some have simply <a href=\"http://www.typescriptlang.org/\">invented</a> “typed” JavaScript as an alternative. <a href=\"http://haste-lang.org/\">Others</a> have gone a step further and just tossed JavaScript out <a href=\"http://elm-lang.org/\">altogether</a>. It’s clear that composability and type safety are the most important things in future software development; while JavaScript might be composable, it certainly isn’t type safe. </p> \n<p>There is an inherent problem with compiling one language to another: how do you turn one language into another if they are fundamentally different? This is, of course, the domain of compilers. Compilers have been taking nice-looking code and turning it into <a href=\"http://en.wikipedia.org/wiki/Assembly_language\">Assembly</a> for years. The difference is that, with the exception of looking at the disassembly output, no one really spends much time probing around binary code. Thus compiler vendors are free to do pretty much whatever they want to the target code. For example, they can optimise away pointless loops, trim dead code branches, do all sorts of weird things to variable names and function scoping. With to-JavaScript compilers, this disregard for a programmer’s intentions is not really possible. Certainly, you can change all the variables names and do some obfuscation but doing can mean users can’t effectively debug their code (this is commonly solved by having development and production outputs etc.). </p> \n<p>Users of languages that compile to JavaScript also need to have some understanding of JavaScript. The same is not true for users of languages <a href=\"http://www.scala-lang.org/\">that</a> <a href=\"http://groovy.codehaus.org/\">target</a> <a href=\"http://clojure.org/\">the</a> JVM – many Scala developers (myself included) have only cursory knowledge of Java.</p> \n<p>So what can JavaScript do to be better? I gave a hint by mentioning the JVM above. It might be that the best thing for JavaScript would be to morph into some kind of bytecode. If there was a standardised bytecode for JavaScript and all browsers, then all these compile-to-JavaScript languages could be more aggressive in their compilation strategies, shedding the hindrance of syntax and getting down to the real work.</p> \n<p><a href=\"http://asmjs.org/\">asm.js</a> has gone a long way towards making this a reality. There have been some very impressive performance displays using asm. In general, applications harnessing it seem to run at 1.2x-1.5x the <a href=\"https://hacks.mozilla.org/2013/12/gap-between-asm-js-and-native-performance-gets-even-narrower-with-float32-optimizations/\">speed</a> of native C/C++ applications. This is truly impressive performance – an interpreted language running at 1.2x the speed of C++! Currently, asm is only given full <a href=\"http://techcrunch.com/2013/12/21/mozillas-asm-js-gets-another-step-closer-to-native-performance/\">support</a> in Firefox and running some of the <a href=\"https://developer.mozilla.org/en/demos/detail/bananabread\">examples</a> in Chrome highlight this. But should the other browser vendors come to support it natively, there might finally come a standardised JavaScript (sort of) bytecode, which would make these compile-to-JavaScript languages a lot more useful.</p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/8d407ba2443005545289bf28ec7986cac94e89ce/90_336_1384_830/1000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":600,"width":1000,"orientation":"landscape","credit":"Google","altText":"Binary code","cleanCredit":"Photograph: Google"}],"bodyImages":[],"webPublicationDate":"2015-02-17T16:49:38Z","lastModified":"2015-02-17T16:51:42Z","metadata":{"commentable":true,"commentCount":2,"contributors":[{"name":"Hugo Gibson","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/hugo-gibson"}],"feature":false,"keywords":["Technology","Programming"],"tags":[{"id":"technology/technology","webTitle":"Technology"},{"id":"technology/programming","webTitle":"Programming"}],"section":{"id":"info"},"topics":[{"displayName":"Hugo Gibson","topic":{"type":"tag-contributor","name":"profile/hugo-gibson"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/feb/17/compile-to-javascript-languages","shortUrl":"http://gu.com/p/45nev","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/feb/17/compile-to-javascript-languages","webUri":"http://www.theguardian.com/info/developer-blog/2015/feb/17/compile-to-javascript-languages"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/8d407ba2443005545289bf28ec7986cac94e89ce/90_336_1384_830/1000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":600,"width":1000,"orientation":"landscape","caption":"Binary code Photograph: Google","credit":"Google","altText":"Graphical representation of binary code","cleanCaption":"Binary code","cleanCredit":"Photograph: Google"}},"importance":4,"showQuotedHeadline":false,"sublinks":[]},{"title":"What to listen to next? jq to the rescue!","rawTitle":"What to listen to next? jq to the rescue!","item":{"type":"article","id":"info/developer-blog/2015/feb/10/what-to-listen-to-next-jq-to-the-rescue","title":"What to listen to next? jq to the rescue!","trailText":"Search the Guardian for five star music reviews directly from your command-line<br>","standFirst":"<p>Search the Guardian for five star music reviews directly from your command-line<br /></p>","byline":"Rupert Bates","body":"<p>Recently I was looking for some new music to listen to and thought I’d check the Guardian to see what had received good reviews. When I went on to the site though I found it a bit hard to narrow down the reviews to ones I was interested in — albums rather than live reviews, which had received at least 4 stars.</p> \n<p>Naturally I turned to the <a href=\"http://explorer.content.guardianapis.com/\">Content API</a> for help and this also seemed like a good opportunity to learn a tool I’d been interested in for a while: <a href=\"http://stedolan.github.io/jq/\">jq</a>.</p> \n<p>Jq, according to their GitHub site, is “a lightweight and flexible command-line JSON processor ... like <a href=\"http://en.wikipedia.org/wiki/Sed\">sed</a> for JSON”. </p> \n<p>I think of it as performing the functions that XPath and XSLT do for XML but for JSON (fortunately the syntax is far less verbose than XSLT). There is a fairly decent <a href=\"http://stedolan.github.io/jq/tutorial/\">tutorial</a> on the site, but best of all there is an <a href=\"https://jqplay.org/\">online tool</a> which allows you to try out jq interactively in a browser. </p> \n<p>First though we need some JSON to transform, so over to the Content API.</p> \n<h2>CAPI talk</h2> \n<p>It is a simple enough task to fetch reviews by adding the tone/reviews tag, and by adding the tone/albumreview tag as well we can exclude live reviews and just return albums (I found that using both tags rather than just tone/albumreview alone gave better results because it filtered out some other non-review type articles).</p> \n<p>By also adding fields=starRating into our query, we can return the star rating given in the review. Then we will limit our query to the last month by adding date parameters. This is about as far as we can go with the Content API since it doesn’t support querying by star rating.</p> \n<p>Our final query string now looks like this:</p> \n<p><a href=\"http://content.guardianapis.com/search?api-key=test&amp;show-fields=starRating&amp;page-size=1&amp;tag=tone/albumreview,tone/reviews&amp;from-date=2015-01-03&amp;to-date=2015-02-03\">http://content.guardianapis.com/search?api-key=test&amp;show-fields=starRating&amp;page-size=1&amp;tag=tone/albumreview,tone/reviews&amp;from-date=2015-01-03&amp;to-date=2015-02-03</a></p> \n<p>...and the response looks like this (trimmed to two results for brevity):</p> \n<figure class=\"element element-embed\" data-alt=\"Music reviews json\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/rupertbates/83ed33ebad162a4934a1.js&quot;&gt;&lt;/script&gt;\"></iframe> \n <figcaption>\n  Music reviews json\n </figcaption> \n</figure> \n<h2>Jq for the music</h2> \n<p>Next we need to take this JSON and do something interesting with it. If you recall, we were trying to find albums which received good reviews — ie. those with a star rating of 4 or above. This is where jq comes in as it allows us to take the JSON returned by the Content API and very quickly and easily filter it based on JSON values.</p> \n<p>The general idea will be to issue a <a href=\"http://en.wikipedia.org/wiki/CURL\">curl</a> command to retrieve the JSON and then pipe it to jq to query, transform and analyse it.</p> \n<p>As a first step, you can see from the JSON above that there is quite a bit of metadata at the root of the response which we are not really interested in for the purposes of this exercise. Using jq we can quite easily throw all this away and just focus on what we are interested in — the results array.</p> \n<figure class=\"element element-embed\" data-alt=\"Retrieving the results array from the response\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/rupertbates/0562dfe8170ab3ac6e3f.js&quot;&gt;&lt;/script&gt;\"></iframe> \n <figcaption>\n  Retrieving the results array from the response\n </figcaption> \n</figure> \n<p>The output from jq looks like this (again trimmed for brevity):</p> \n<figure class=\"element element-embed\" data-alt=\"The results array\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/rupertbates/a8fa0bccc9280ce777e0.js&quot;&gt;&lt;/script&gt;\"></iframe> \n</figure> \n<p>Let’s have a look in more detail at what is happening here. Along with the JSON from the Content API which is piped into jq, we are also passing a filter ‘.response.results[]’ — this describes a path into our JSON structure. The initial . is the root of the object, then we navigate into the response element and access the elements of the results array using ‘results[]’.</p> \n<p>This is great because we now have a really flat, clean JSON structure to work with and it is much easier to see what is going on.</p> \n<p>The next thing to do is to filter the reviews we’ve returned based on their star rating. Unfortunately the Content API returns the star rating as a string — it would be much nicer if it was a number as we could then search for reviews where the rating is greater than 3 rather than where it is “4” or “5”. Fortunately, an addition to our jq filter will allow us to do just this (from now on I will just show the actual filter we pass to jq rather than the full command):</p> \n<figure class=\"element element-embed\" data-alt=\"Converting star rating to a number\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/rupertbates/7b0f1c338bbe91c93a95.js&quot;&gt;&lt;/script&gt;\"></iframe> \n</figure> \n<h2>Easy pieces</h2> \n<p>There are a few things to notice here: firstly we are combining our original path filter which pulls out the results array with a second filter using the pipe operator ‘|’ in the same way we might combine commands in a bash shell. This allows us to easily build up arbitrarily complicated pipelines out of simple component filters. </p> \n<p>Also of interest is the second filter we have added, which tells jq to transform our input JSON into a new JSON object. The curly brackets denote the root of the new object, and we are copying the webTitle field over as-is. Then we are creating a starRating field at the top level of the new object (rather than nested inside a fields object) and converting this to a number using the ‘tonumber’ function.</p> \n<p>The output then looks like this (note that starRating is now a number):</p> \n<figure class=\"element element-embed\" data-alt=\"Json with converted star rating\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/rupertbates/29b5bde240a2742e6e4f.js&quot;&gt;&lt;/script&gt;\"></iframe> \n</figure> \n<p>All that is now left to do is to select those reviews with a star rating of more than three. This is easily achieved by adding a select filter onto our jq input:</p> \n<figure class=\"element element-embed\" data-alt=\"Selecting reviews with a star rating of more than three\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/rupertbates/00d985cf84332583bf97.js&quot;&gt;&lt;/script&gt;\"></iframe> \n</figure> \n<h2>It’s all too much</h2> \n<p>This returned quite a lot of results. To find out exactly how many, we can use the length function. Note that to use length we have to wrap the preceding filters in square brackets to turn their output into an array.</p> \n<figure class=\"element element-embed\" data-alt=\"Counting results with the length function\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/rupertbates/3024a96ab3858d2f2183.js&quot;&gt;&lt;/script&gt;\"></iframe> \n</figure> \n<p>57 results apparently — rather too many to get through in an afternoon! So let’s just concentrate on the five star reviews — there are only six of them, and here they are:</p> \n<figure class=\"element element-embed\" data-alt=\"Five star reviews in the last month\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/rupertbates/cfdbff81c63cc5f5a96b.js&quot;&gt;&lt;/script&gt;\"></iframe> \n</figure> \n<p>So that’s my listening for the afternoon sorted out: a heady mix of classical and Napalm Death, with some Dylan and Natalie Prass thrown in for good measure.</p> \n<h2>It’s all over now baby blue</h2> \n<p>I found working with jq a real pleasure once I grasped the basics of chaining filters to select, transform and analyse JSON. JSON is such a central part of so many applications these days that it is great to have such a powerful tool at our disposal. The syntax is beautifully terse — pretty much anything can be accomplished in a one-liner and the concept of mapping and filtering to transform inputs will feel totally natural to anyone with a functional programming background.</p> \n<p>Here is my final script for retrieving five star reviews from the Content API. In the final version I’ve added an additional filter to remove any results where the star rating is missing and also included the web url with the output.</p> \n<figure class=\"element element-embed\" data-alt=\"Fetch all 5 star reviews from the Guardian content api and process them with jq\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;script src=&quot;https://gist.github.com/rupertbates/f51570b9690d612c1f29.js&quot;&gt;&lt;/script&gt;\"></iframe> \n</figure>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/10/1423588025545/12036546815_777c14c432_o-1020x612.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","credit":"CHRIS DRUMM/flickr","altText":"Bob Dylan image"}],"bodyImages":[],"webPublicationDate":"2015-02-10T17:10:47Z","lastModified":"2015-02-10T17:15:42Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Rupert Bates","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/rupert-bates"}],"feature":false,"keywords":["Technology","Programming","Computing"],"tags":[{"id":"technology/technology","webTitle":"Technology"},{"id":"technology/programming","webTitle":"Programming"},{"id":"technology/computing","webTitle":"Computing"}],"section":{"id":"info"},"displayHint":"technical","topics":[{"displayName":"Rupert Bates","topic":{"type":"tag-contributor","name":"profile/rupert-bates"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/feb/10/what-to-listen-to-next-jq-to-the-rescue","shortUrl":"http://gu.com/p/45f84","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/feb/10/what-to-listen-to-next-jq-to-the-rescue","webUri":"http://www.theguardian.com/info/developer-blog/2015/feb/10/what-to-listen-to-next-jq-to-the-rescue"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/10/1423588025545/12036546815_777c14c432_o-1020x612.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"bob dylan- the complete album collection, vol. one <a href=\"https://www.flickr.com/photos/cdrummbks/12036546815/\">Photograph: CHRIS DRUMM/flickr</a>","credit":"CHRIS DRUMM/flickr","altText":"Bob Dylan image","cleanCaption":"bob dylan- the complete album collection, vol. one <a href=\"https://www.flickr.com/photos/cdrummbks/12036546815/\">Photograph: CHRIS DRUMM/flickr</a>"}},"importance":5,"showQuotedHeadline":false,"sublinks":[]},{"title":"\"Do what you want\": building great products through anarchy","rawTitle":"\"Do what you want\": building great products through anarchy","item":{"type":"article","id":"info/developer-blog/2015/feb/09/do-what-you-want-building-great-products-through-anarchy","title":"\"Do what you want\": building great products through anarchy","trailText":"Exploring how developer anarchy can create great software","standFirst":"<p>How can you build better products that involve everyone on the team? The Workflow team tried developer anarchy and found it a great way to build software</p>","byline":"Alastair Jardine","body":"<p>For the past six months, the Guardian’s editorial tools team has been building a product for the organisation to manage its digital content through the production process. Called Workflow (yes, it’s unimaginative), the tool tracks content from inception through to publication. We’re not going to explore the tool itself. Instead, we’re going to look at the way we built the product, as I believe there is a lot to show about the way the team has worked together. The team was comprised of three developers, a UX architect, a UI designer, a QA, an agile project manager, and a product manager, all with a broad range of experience building software.</p> \n<h2>The workshop</h2> \n<figure class=\"element element-image\" data-media-id=\"5cece85cd22d80838b01d2824d6b210e0562f2cc\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/3/1422967772322/de66a0a1-69d5-4e01-869e-3c17e7f2830b-460x276.jpeg\" alt=\"Workshop\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Capturing the scale of the problem in a user story generation workshop.</span> \n  <span class=\"element-image__credit\">Photograph: Alastair Jardine</span> \n </figcaption> \n</figure> \n<p>Before the team had even come together, we held a workshop in the <a href=\"https://www.youtube.com/watch?v=Rb9EVoHLsM0\">Guardian’s UX studio</a> to understand the scope of the problem. The workshop was structured so that everyone had an opportunity to contribute. The attendee list was deliberately chosen to maximise the range of opinions and depth of experience, from both an editorial and development perspective. It passed the ‘sensible people test’: remember, we were trying to understand the problem, not necessarily the weight or validity of each opinion at this stage. The range of user stories that were generated was staggering in both volume and range of thinking.</p> \n<figure class=\"element element-image element--thumbnail\" data-media-id=\"836f2990da35a861fdb9154b010bbf511f6eba9d\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/3/1422967053691/17824cd9-5b61-47d4-9f25-0ba2a53f2dfd-280x420.jpeg\" alt=\"A chunk of cards containing user stories\" width=\"280\" height=\"420\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">A chunk of cards containing user stories.</span> \n </figcaption> \n</figure> \n<p>We’d generated over 150 user stories , many of which were <a href=\"http://www.mountaingoatsoftware.com/blog/stories-epics-and-themes\">epics</a>, and so would naturally break down into more granular stories. Some examples:</p> \n<ul> \n <li>As a sub-editor I want to see all the stories in the department I am working in that have not yet been subbed so that I can sub them<br /></li> \n <li>As an editor I want to see content within my desk, what stage it is at and who is working in it so that I can ensure we will meet our deadlines<br /></li> \n <li>As a fronts editor I want to see all content that is being prepared for publication so that I can plan what will go on my front and when<br /></li> \n</ul> \n<p>This volume of stories covered all aspects of the publication process, from story planning, through to post-publication promotion. David Blishen—our group product manager—slimmed down the cards into a core set of ‘stuff’ which represented our minimum usable product. </p> \n<h2>Bring the anarchy</h2> \n<p>The first meeting as a team was to decide on the way were were going to structure the way we work. Agile was the obvious choice, right? Think on. Our lead developer <a href=\"x-gu://list/mobile-apps.guardianapis.com/lists/tag/profile/stephen-wells\">Stephen Wells</a> pitched a number of methodologies to us, and the one that stood out was ‘<a href=\"https://www.google.co.uk/search?q=developer+programmer+anarchy\">developer anarchy</a>’. Broadly speaking, developer anarchy works on a belief that if you let a sensible development team understand the business problem—in our case, managing content through a production process—then you’ll end up with a quality product. We’d all worked in teams where a sense of problem ownership was low and we wanted to see what would happen if we took a bit more control. Thus: the team became anarchistic in its approach.</p> \n<p>We decided pretty early on that we would forgo traditional rounds of flat designs, and build a prototype product that we could test with our editorial users. I took the time to build a clickable HTML/CSS/JavaScript prototype, which allowed us to quickly get something on screen that felt real and proportional. </p> \n<p>Much to my surprise (and to be fair, theirs once they looked at my code!) the developers on the team took this work, and hooked up a back end. The working prototype was rough, but it did one thing: track a piece of content from inception to publication.</p> \n<figure class=\"element element-image element--supporting\" data-media-id=\"f89c584628d722e301f8cddab71ad28bcf5fe076\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/3/1422967540680/7317ab31-ec7a-42d9-b1a3-4c255dbf043f-460x299.png\" alt=\"HTML prototype\" width=\"460\" height=\"299\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">HTML prototype to explore how the tool could work. This was actually hooked up to a back end. Yikes.</span> \n </figcaption> \n</figure> \n<p>The goal of this working prototype was to test concepts and execution to learn about what worked as a team. We learned really quickly (our editorial colleagues aren’t a shy bunch) where functionality was lacking, and what we’d missed. Our decision to test ideas and concepts meant we were testing questions and hypotheses against the product, and capturing that learning so we could iterate and refine. Some concepts were thrown out, or just didn’t work as expected. But as a group, how did we most effectively learn and understand the problem at hand?</p> \n<h2>Everyone on the same page</h2> \n<p>One of the main challenges I’ve seen in my time doing UX is “moderated access” to users. It’s my belief that all members of the team should know the users, be able to speak to them, collate problems and understand the problem space in which they are operating. As UX people (and product people are also guilty of this), it’s tempting to be that bridge between users and the development team. You know how it goes: have a conversation with a user, understand the problem, hive oneself off, then pitch a solution back to the team. But there’s a real issue with this. By not having a developer in the conversation, you end up being the arbiter of all knowledge, and contribute to the marginalisation of understanding. You quickly arrive at a situation where the whole team doesn’t see the full extent of the problem, and so the technical solutions are always going to be predicated on a subset of knowledge. The other consequence is that the team don’t have a full sense of ownership, and so motivation can often suffer. We worked really hard in the Workflow team to have a developer at every conversation and session where we were speaking with users. Similarly with training, we always had a developer there, or indeed, no UX person at all.</p> \n<h2> \n <strike>\n   Stand ups \n </strike> Sit downs</h2> \n<p>It’s fair to say that during the early phases of the product when the team was in the “build, test, learn” phase, our daily stand-ups were <em>actually</em> spent sat down talking about what we’d all learned the previous day, and what we might want to do about it. The daily sit downs were effective. Everyone knew everything that was going on. Developers having a sense of ownership of the problem was powerful – they would pick up a piece of work that was both important and would solve a problem we’d identified as a team, irrespective of whether it was user-facing or not. We also did away with sprints, not least because it was obvious to everyone on the team what the next thing to be tackled should be.</p> \n<p>But what are the implications from a user experience perspective? </p> \n<aside class=\"element element-pullquote\"> \n <blockquote> \n  <p>By getting everyone onto the same page, it made my job an order of magnitude easier</p> \n </blockquote> \n</aside> \n<p><strong>It’s been a product-creation epiphany. </strong>By getting everyone onto the same page, it made my job an order of magnitude easier. Why? There was almost certainly a developer present when a problem or opportunity is spotted. I’ve spent too much of my time pitching legitimate problems (and solutions) back to development teams in the past, attempting to get “buy in” for problem (or solution). By having everyone on the team be part of the earlier stages in that process—the problem identification bit—the end result has been excellent. The what, when, why is just obvious (even if the solution isn’t).</p> \n<p>It’s important to remember this works particularly well when you’re working in the same building as your users. When they’re not in the same building, it can be a challenge. I wouldn’t suggest this is easy when they’re not co-located, but the same principle applies: in any research, get the whole team involved in the process, and get them to know your users without the lens of a UX person filtering out.</p> \n<p>Where did we end up? Here’s a screenshot of the current product, which is being happily used by our editorial colleagues:</p> \n<figure class=\"element element-image\" data-media-id=\"7787827cde471bfe968df728757c3733ee698761\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/11/1423663108019/0acea865-5e23-40b0-a13e-36c45117ad95-460x300.png\" alt=\"Screenshot of Workflow\" width=\"460\" height=\"300\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Screenshot of Workflow.</span> \n </figcaption> \n</figure> \n<h2>Lessons learned</h2> \n<p>The biggest lesson learned is that giving people the ability to work on a product in a way that they see fit is a liberating and ultimately rewarding way to develop a product. It absolutely requires the team to understand the problems that are being solved. By empowering the team to speak to people directly, you end up with a greater corpus of understanding, which leads to better decision making. You might disagree about the solution, but you know that the problem is shared.</p> \n<p>And as a UX person? We need to champion whole team understanding and user engagement, and not get in the way. If you’re doing research and playing it back to the team at a later date using a presentation, you’ve probably just disconnected from the team. If you work in the same building as your users and team for eight hours a day, then the ‘playback’ is the ongoing conversation with users and the team. You might need to formalise things occasionally, but it should be as a last resort. </p> \n<p>One excellent example of team ‘connectedness to the problem’ is features requests: it’s been rare that we’ve not discussed or suggested features in advance of our users actually requesting them.</p> \n<p>A final thought. To make this work, it does require an engaged development team with a certain level of maturity and confidence, so bear that in mind. It won’t work for all teams, but where it can, embrace it.<br /></p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/4/1423064041169/f0caf97b-c600-4b37-af21-206e6c887645-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","credit":"Alastair Jardine","altText":"Sketches of Workflow","cleanCredit":"Photograph: Alastair Jardine"}],"bodyImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/3/1422967774085/e0a4ae67-27f5-427b-b20e-5cff54c3eea4-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Capturing the scale of the problem in a user story generation workshop. Photograph: Alastair Jardine","credit":"Alastair Jardine","altText":"Workshop","cleanCaption":"Capturing the scale of the problem in a user story generation workshop.","cleanCredit":"Photograph: Alastair Jardine"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/3/1422967056412/3ee761ff-20fb-423b-8b9a-de1e2d175afe-1360x2040.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":2040,"width":1360,"orientation":"portrait","caption":"A chunk of cards containing user stories.","credit":"Alastair Jardine","altText":"A chunk of cards containing user stories","cleanCaption":"A chunk of cards containing user stories."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/3/1422967540149/1d351d7b-0fa4-4a24-87e8-075349d9134e-1020x663.png?width=#{width}&height=#{height}&quality=#{quality}","height":663,"width":1020,"orientation":"landscape","caption":"HTML prototype to explore how the tool could work. This was actually hooked up to a back end. Yikes.","credit":"Illustration: Alastair Jardine","altText":"HTML prototype","cleanCaption":"HTML prototype to explore how the tool could work. This was actually hooked up to a back end. Yikes."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/11/1423663107434/1b50ebf6-b7e1-4d09-b653-7d1dcd5dcd47-1020x665.png?width=#{width}&height=#{height}&quality=#{quality}","height":665,"width":1020,"orientation":"landscape","caption":"Screenshot of Workflow.","credit":"Illustration: The Guardian","altText":"Screenshot of Workflow","cleanCaption":"Screenshot of Workflow."}],"webPublicationDate":"2015-02-09T15:16:10Z","lastModified":"2015-02-18T17:50:59Z","metadata":{"commentable":true,"commentCount":3,"contributors":[{"name":"Alastair Jardine","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/alastair-jardine"}],"feature":false,"keywords":["Software","Technology","Computing"],"tags":[{"id":"technology/software","webTitle":"Software"},{"id":"technology/technology","webTitle":"Technology"},{"id":"technology/computing","webTitle":"Computing"}],"section":{"id":"info"},"topics":[{"displayName":"Alastair Jardine","topic":{"type":"tag-contributor","name":"profile/alastair-jardine"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/feb/09/do-what-you-want-building-great-products-through-anarchy","shortUrl":"http://gu.com/p/45egm","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/feb/09/do-what-you-want-building-great-products-through-anarchy","webUri":"http://www.theguardian.com/info/developer-blog/2015/feb/09/do-what-you-want-building-great-products-through-anarchy"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/4/1423064041169/f0caf97b-c600-4b37-af21-206e6c887645-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Very early sketch exploration of the Workflow product. Photograph: Alastair Jardine","credit":"Alastair Jardine","altText":"Very early sketch exploration of the Workflow product","cleanCaption":"Very early sketch exploration of the Workflow product.","cleanCredit":"Photograph: Alastair Jardine"}},"importance":5,"showQuotedHeadline":false,"sublinks":[]},{"title":"How we reimagined search for the Guardian app in one day","rawTitle":"How we reimagined search for the Guardian app in one day","item":{"type":"article","id":"info/developer-blog/2015/feb/06/how-we-reimagined-search-for-the-guardian-app-in-one-day","title":"How we reimagined search for the Guardian app in one day","trailText":"Neil Gaiman once said “Google can bring you back 100,000 answers. A librarian can bring you back the right one.” Here’s how we went about trying to become the librarian.","standFirst":"<p>Neil Gaiman once said “Google can bring you back 100,000 answers. A librarian can bring you back the right one.” Here’s how we went about trying to become the librarian.</p>","byline":"Helene Sears","body":"<p>There are two key reasons we believe our readers rely on the ability to search. Firstly for expedience: they read an article or know they like a particular contributor and want to quickly get there again. Secondly is out of exhaustion. After trying to find something manually by combing through the menu without any luck, they tap on the magnifying glass icon as a last resort. Both are crucial as mobile attention spans are painfully low - especially for the latter situation as the reader is likely to be one failed attempt away from giving up and leaving.</p> \n<h2><strong>Defining the problem</strong></h2> \n<p>At the Guardian we prioritise features we believe will be of most value to our readers by making data based decisions. What do the numbers say about where our users are spending their time? What headlines and menu items are being tapped on? etc. But of course that is only half the story. A reader could spend a long time on a page because they cannot figure out the navigation, so what looks like a positive figure in time spent is a negative experience in reality.<br /></p> \n<p>From a data perspective, ‘search’ was hard to define as a problem - we felt it wasn’t what readers wanted but the feature had very little tracking on it. What’s more, if readers found it frustrating they were unlikely to use it again, meaning the number of visitors would be low anyway. Fortunately we hear from our readers frequently when they are unhappy with a feature (yes, fortunately) and we heard about search from a small but vocal minority enough to know there was an issue. </p> \n<h2>What we had to work with</h2> \n<figure class=\"element element-image element--thumbnail\" data-media-id=\"151810b73061e4798c159248de2f4febf4d35135\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/6/1423215698178/1d657c6a-bf6f-454f-a417-6bee30a9bd27-280x420.png\" alt=\"Old search\" width=\"280\" height=\"420\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">The previous search only returned tags which had no hierarchy. The results from searching “UK” shown here are especially unhelpful.</span> \n  <span class=\"element-image__credit\">Photograph: The Guardian</span> \n </figcaption> \n</figure> \n<p>The previous Guardian search on the mobile app was a “tag” search with the ability to add results to the homepage. Adding tags to the homepage is a nice feature — Guardian articles are tagged with keywords resulting in some 8,000+ total tags. If you are interested in a particularly specialist area - say bullfighting - you can have anything <a href=\"x-gu://list/mobile-apps.guardianapis.com/lists/tag/world/bullfighting\">published with that tag</a> added as a container on your homepage. Unfortunately, this version of search does not address either of the key user cases listed above. </p> \n<p>The content appeared in alphabetical rather than relevant order, articles were not available at all and every listed item had an ‘add to home’ icon next to it. As mentioned adding to home is a hugely powerful and useful feature, but it wasn’t in the right place here. </p> \n<h2>Creating solutions - quickly</h2> \n<figure class=\"element element-image\" data-media-id=\"439a1c555c9dd03f96f185b8d61b3204f1ba05fc\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/4/1423070498879/3f3abbce-8af3-4b20-9c78-d10d999a9fa1-460x276.jpeg\" alt=\"Sketches of the new search, our ideas included adding articles and visually disguising different categories of content.\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Sketches of the new search, our ideas included adding articles and visually distinguishing different categories of content.</span> \n </figcaption> \n</figure> \n<p>As there was not a clear data argument for spending a lot of time revising search, we tackled it in one day. This is a new way of working for the apps team, where we quickly define problems, brainstorm solutions, then build the best ideas and test them. <a href=\"x-gu://list/mobile-apps.guardianapis.com/lists/tag/profile/adam-fisher\">Adam Fisher</a>, one of our server-side engineers, was keen we revise search and asked me to team up for some UX guidance. </p> \n<p>We sketched out our solutions which I put together in Illustrator and Keynote while he did the hard work of making the backend system work the way we wanted.</p> \n<figure class=\"element element-video\" data-canonical-url=\"http://www.youtube.com/watch?v=0u_Vqr6j7to\"> \n <iframe width=\"460\" height=\"259\" src=\"https://www.youtube.com/embed/0u_Vqr6j7to?wmode=opaque&amp;feature=oembed\" frameborder=\"0\" allowfullscreen=\"\"></iframe> \n <figcaption>\n  Our Keynote presentation of the ideas we sketched earlier.\n </figcaption> \n</figure> \n<p>A few of the key changes we made:<br /></p> \n<ul> \n <li>There are three clear buckets of content - articles, contributors and tags. Previously articles were not available at all. </li> \n <li>‘Tags’ was renamed ‘subjects’ (I always think of my grandmother when naming anything audience facing: calling something ‘tags’ would earn an angry finger wagging).</li> \n <li>The buckets order based on what search thinks you are looking for. Lots of words mean you are probably after an article. If you search for a main section it tops the list and is bolded to distinguish it from smaller sections.</li> \n <li>The ‘add to home’ button is stripped out from the search results. Readers can still add to their homepage, they just have to click through and do it from the front of the section, subject or contributor. </li> \n</ul> \n<figure class=\"element element-image\" data-media-id=\"fff6f45578ea81ed26f0cc596b3cf8ccc98f5354\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/6/1423226950614/0caf1e8a-b587-4fbb-90bd-53d2bdc3f129-460x276.png\" alt=\"Search wireframe\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">A wireframe of a user journey if they search for an article.</span> \n  <span class=\"element-image__credit\">Illustration: Helene Sears</span> \n </figcaption> \n</figure> \n<p>Our revised version felt strong enough to release with added tracking to better understand how people are using search for future improvements.</p> \n<h2>Polishing and releasing</h2> \n<p>Designer Frank Hulley-Jones brought the idea to life with small portraits of the contributors, easy to identify icons on the articles and a clean typographic hierarchy for the subjects - all designed to make it easier for the user to find what they are looking for.</p> \n<figure class=\"element element-image\" data-media-id=\"35c19cae10dd3d6746b6889f1d52a78ce526aae7\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/6/1423225875560/2f99fc28-400d-4691-ac50-3935502aec45-460x276.png\" alt=\"Search designs\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Frank Hulley-Jones designed search to make it easier to visually find what the reader is looking for.</span> \n  <span class=\"element-image__credit\">Illustration: Frank Hulley-Jones for the Guardian</span> \n </figcaption> \n</figure> \n<p>Working closely with the front-end developers we have recently launched the new and improved search feature to Android with release to the iOS app imminent. </p> \n<p>Search is not done. We wanted to get this first pass out the door and build upon what we learn from our audience. We’re always updating and improving the app and quickly resolving issues and then iterating to make the experience better and better is how we want to work going forwards.</p> \n<p>Please check it out, we hope this makes it a whole lot easier to find what you are searching for but if not then drop us a line at <a href=\"mailto:Apps.feedback@guardian.co.uk\">apps.feedback@guardian.co.uk</a>. </p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/4/1423075188840/723cdfb5-6ba5-4ce0-9a62-06460c20efb2-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","credit":"Frank Hulley-Jones","altText":"Search image","cleanCredit":"Photograph: Frank Hulley-Jones"}],"bodyImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/6/1423215697383/85761745-5ee7-44c9-803b-dd8d947c36fc-680x1020.png?width=#{width}&height=#{height}&quality=#{quality}","height":1020,"width":680,"orientation":"portrait","caption":"The previous search only returned tags which had no hierarchy. The results from searching “UK” shown here are especially unhelpful. Photograph: The Guardian","credit":"The Guardian","altText":"Old search","cleanCaption":"The previous search only returned tags which had no hierarchy. The results from searching “UK” shown here are especially unhelpful.","cleanCredit":"Photograph: The Guardian"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/4/1423070500667/5ec47d9b-7958-434b-a3ff-088c1e7e8f3c-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Sketches of the new search, our ideas included adding articles and visually distinguishing different categories of content.","credit":"Helene Sears","altText":"Sketches of the new search, our ideas included adding articles and visually disguising different categories of content.","cleanCaption":"Sketches of the new search, our ideas included adding articles and visually distinguishing different categories of content."},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/6/1423226951298/6fd914d7-465d-4eb5-b914-d0c533d647bd-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"A wireframe of a user journey if they search for an article. Photograph: Illustration: Helene Sears","credit":"Illustration: Helene Sears","altText":"Search wireframe","cleanCaption":"A wireframe of a user journey if they search for an article.","cleanCredit":"Illustration: Helene Sears"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/6/1423225876634/d3681376-04f0-4818-be4a-79a3205d49b1-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"Frank Hulley-Jones designed search to make it easier to visually find what the reader is looking for. Photograph: Illustration: Frank Hulley-Jones for the Guardian","credit":"Illustration: Frank Hulley-Jones for the Guardian","altText":"Search designs","cleanCaption":"Frank Hulley-Jones designed search to make it easier to visually find what the reader is looking for.","cleanCredit":"Illustration: Frank Hulley-Jones for the Guardian"}],"webPublicationDate":"2015-02-06T12:59:23Z","lastModified":"2015-02-09T09:42:36Z","metadata":{"commentable":false,"commentCount":0,"contributors":[{"name":"Helene Sears","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/helene-sears"}],"feature":false,"keywords":["Technology","Apps"],"tags":[{"id":"technology/technology","webTitle":"Technology"},{"id":"technology/apps","webTitle":"Apps"}],"section":{"id":"info"},"topics":[{"displayName":"Helene Sears","topic":{"type":"tag-contributor","name":"profile/helene-sears"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/feb/06/how-we-reimagined-search-for-the-guardian-app-in-one-day","shortUrl":"http://gu.com/p/45fjn","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/feb/06/how-we-reimagined-search-for-the-guardian-app-in-one-day","webUri":"http://www.theguardian.com/info/developer-blog/2015/feb/06/how-we-reimagined-search-for-the-guardian-app-in-one-day"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/4/1423075188840/723cdfb5-6ba5-4ce0-9a62-06460c20efb2-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"The Guardian app team revised search, with a large amount of the work done in a single day.","credit":"Illustration: Frank Hulley-Jones","altText":"Search image","cleanCaption":"The Guardian app team revised search, with a large amount of the work done in a single day."}},"importance":5,"showQuotedHeadline":false,"sublinks":[]},{"title":"All the news that fits to print","rawTitle":"All the news that fits to print","item":{"type":"article","id":"info/developer-blog/2015/feb/06/all-the-news-that-fits-to-print-news-consumption-from-the-perspective-of-time","title":"All the news that fits to print","trailText":"<strong>News consumption from the perspective of time</strong>","standFirst":"<p> News consumption from the perspective of time</p>","byline":"Chris J. Clarke","body":"<p>Consuming news is not something people spend a lot of time thinking about. It’s usually in a quick and efficient manner to achieve a desired result; a need to know what’s going on in the world right now.</p> \n<p>In the initial designs for the guardian beta site we had a problem, users weren’t able to get that quick overview of what’s happening.</p> \n<p>So what does an overview of news look like to our individual reader? Well that depends on what their intent is, something we’ve been looking into over the last few months, resulting in the identification of three different modes of consumption - update, discover and extend.</p> \n<p><strong>Update</strong> - “I want to feel connected to what’s going on in the world”</p> \n<p><strong>Discover</strong> - “I want to be shown something new about the things I’m interested in”</p> \n<p><strong>And finally extend </strong>- “I want to gain a deeper understanding of a specific story”</p> \n<p>The last two intentions can differ depending on the type of story and the time of day that it’s read and how a story may develop.</p> \n<p>So depending on the time of day, readers will have one or several of the intentions above with the assumption being; readers tend to read short-form news during the day, and long-form when they have more time to read it. With the concept of time, combined with intent and consumption posed a very interesting question:</p> \n<blockquote> \n <h2><em>Could the perspective of time be the basis from which the new front page of theguardian.com is designed?</em></h2> \n</blockquote> \n<h2>Consumption and time</h2> \n<p>So what if users allocate different amounts of time and effort to consume different types of content? For example, an “update” intention could be a short amount of a reader’s time and an “extend” intention a longer period. What if we could create a frontpage based on the amount of time a person expects to spend consuming content? Could that theory combine the needs of our readers and our editors into a single principle - an editor would choose a quick-to-read layout for the most important headlines of the moment, meeting a reader’s intention to consume news quickly.</p> \n<figure class=\"element element-image\" data-media-id=\"bdb461241fccf64a90b8dabdd4ac902795b8ab12\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/6/1423218022234/5757c152-df6c-4529-9b0d-4c846dbd8919-460x158.jpeg\" alt=\"consumption theory\" width=\"460\" height=\"158\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Diagram by Nick Haley</span> \n </figcaption> \n</figure> \n<h2>Fast journalism - Slow journalism</h2> \n<p>So, if we take the concept of time, how does it manifest itself physically on the page? Our original responsive patterns were uniform in layout, creating a monotonous grid that lacked variation. If we could vary the layout, text and other visual elements, according to how quickly it could be scanned and comprehended, we could represent the “update,” “extend” and “discover” intentions through design.</p> \n<p>“Update” would be fast journalism - a basic presentation that’s quick to consume. “Extend” would be the slower journalism - with richer visual treatments that are browsed slowly, and “discover” would sit somewhere in the middle.</p> \n<figure class=\"element element-image\" data-media-id=\"e72742ae803636544ae86b11d6adb5d8cfef0973\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/6/1423218067488/2c958181-fd1b-45bb-af04-2dd779b7380f-460x140.jpeg\" alt=\"fast and slow journalism\" width=\"460\" height=\"140\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">fast and slow journalism</span> \n </figcaption> \n</figure> \n<p>Following this line of thought, it could be possible for the reader to distinguish the length and type of each story at a glance. With the overview of news being our initial goal, and “update” being our reader’s first intention, why not make the top container quick to consume, leaving more time to spend scanning the rest of the page? This theory of time and design lead to the breaking apart of our top news container, with two containers presenting a strong news agenda and really showcasing our voice and perspective - headlines, and highlights.</p> \n<p>Headlines would be a fast layout - mostly text based, allowing for quick scanning of the news agenda. Highlights would be a slower container, with richer designs, colours and image treatments showcasing the Guardian voice and perspective. They work together to give you a strong “first impression” when you arrive on the homepage.</p> \n<h2>Taking slow, slower</h2> \n<p>This theory worked the other way too. With “extend” we could expand the design to be a rich, detailed experience enabling editors to give maximum presentation to images where they were needed, containers such as the big picture - the at the end of our front page, as well as our full bleed ‘joker’ container - showcasing our special reports and detailed reporting.</p> \n<figure class=\"element element-image\" data-media-id=\"f3bbc09ce51d6e1bd076453fb399ca87e5a162f9\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/6/1423218103934/db94d69b-9f43-46e7-bbaa-ccb319bce863-460x78.jpeg\" alt=\"The Joker container\" width=\"460\" height=\"78\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Joker container design by Sam Morris</span> \n </figcaption> \n</figure> \n<p>This representation of content allowed us to have a shared understanding across editorial and product teams - a news story is written in a way which is quick and easy to consume, and visually presented in the same manner. A special report should be slower, drawing the reader in and representing the time and effort that went into writing that particular piece. Both editorial and product had the responsibility to present stories effortlessly, and time became the unifying factor as we all work towards the same goal; to provide a great experience to our readers. As with all things this piece of work was a collaborative effort, involving Cecilia Dobbs from product and Sam Morris from our design team.</p> \n<p>This approach of tying content consumption to time has gone through many iterations since the earliest concepts in June, but the idea has remained. Hopefully readers will recognise the style change on the new website and the difference it makes to the experience. We’re always tweaking and developing our ideas, but we’re confident time is the key to consumption.</p> \n<p>We hope with regular use of the new Guardian website, our readers will start to see how the approach helps them to differentiate the content they want to consume, spending less time seeking and more time reading. I recognise that this website refresh is a big change, a change from a vertical layout to a horizontal one. We’re working hard to ensure that everyone still gets that great experience they consistently get from reading their news on the Guardian.</p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/5/1423160352801/d450c0f7-0366-419d-8393-1373625648c6-bestSizeAvailable.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":360,"width":600,"orientation":"landscape","credit":"Chris Clarke","altText":"All the news ","cleanCredit":"Photograph: Chris Clarke"}],"bodyImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/6/1423218025095/2fc6e8ad-9416-4a0e-ac44-35255d786b49-bestSizeAvailable.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":194,"width":565,"orientation":"landscape","caption":"Diagram by Nick Haley","credit":"Chris Clarke","altText":"consumption theory","cleanCaption":"Diagram by Nick Haley"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/6/1423218066975/351e5714-9595-4f1a-93f5-7af15404b4c4-620x188.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":188,"width":620,"orientation":"landscape","caption":"fast and slow journalism","credit":"Chris Clarke","altText":"fast and slow journalism","cleanCaption":"fast and slow journalism"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/6/1423218103678/af37639e-915d-49b2-a7f5-ae13a17e1dee-1020x173.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":173,"width":1020,"orientation":"landscape","caption":"Joker container design by Sam Morris","credit":"Sam Morris","altText":"The Joker container","cleanCaption":"Joker container design by Sam Morris"}],"webPublicationDate":"2015-02-06T10:56:34Z","lastModified":"2015-02-06T16:05:04Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Chris J. Clarke","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/chris-j-clarke"}],"feature":false,"keywords":[],"tags":[],"section":{"id":"info"},"topics":[{"displayName":"Chris J. Clarke","topic":{"type":"tag-contributor","name":"profile/chris-j-clarke"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/feb/06/all-the-news-that-fits-to-print-news-consumption-from-the-perspective-of-time","shortUrl":"http://gu.com/p/45gnk","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/feb/06/all-the-news-that-fits-to-print-news-consumption-from-the-perspective-of-time","webUri":"http://www.theguardian.com/info/developer-blog/2015/feb/06/all-the-news-that-fits-to-print-news-consumption-from-the-perspective-of-time"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/5/1423160352801/d450c0f7-0366-419d-8393-1373625648c6-bestSizeAvailable.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":360,"width":600,"orientation":"landscape","caption":"Fitting the newspaper into a device isn’t easy!","credit":"Chris Clarke","altText":"All the news ","cleanCaption":"Fitting the newspaper into a device isn’t easy!"}},"importance":5,"showQuotedHeadline":false,"sublinks":[]},{"title":"Prout: is your pull request out?","rawTitle":"Prout: is your pull request out?","item":{"type":"article","id":"info/developer-blog/2015/feb/03/prout-is-your-pull-request-out","title":"Prout: is your pull request out?","trailText":"Developers: How do you know your pull request is on production?","standFirst":"<p>How do you know your pull request is on production?</p>","byline":"Roberto Tyley","body":"<p><a href=\"https://membership.theguardian.com/\">Guardian Membership</a> has been continuously deploying since we started the project back in May 2014. <a href=\"https://github.com/guardian/prout\"><em>Prout</em></a> arose to help with a problematic area of this wonderful setup:<br /></p> \n<p>Anything can break. If you’re building a site, the site can break. If you’re building a site with continuous deployment, the site can break, but the continuous deployment pipeline can break too. If either of these things have any value, then you care when they break.</p> \n<figure class=\"element element-image\" data-media-id=\"c98c273057f7863257ae392e757f862594ca4171\"> \n <img src=\"http://media.guim.co.uk/c98c273057f7863257ae392e757f862594ca4171/0_452_2998_1800/1000.jpg\" alt=\"A fireball erupts across Interstate 77 from a pipeline explosion. The gas company failed to conduct inspections or tests that might have revealed weaknesses in the massive pipeline.\" width=\"1000\" height=\"600\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">A fireball erupts across Interstate 77 from a pipeline explosion. The gas company failed to conduct inspections or tests that might have revealed weaknesses in the massive pipeline.</span> \n  <span class=\"element-image__credit\">Photograph: West Virginia State Police/AP</span> \n </figcaption> \n</figure> \n<p>One cause of <em>site</em> breakage is shiny new features, which is why it’s good discipline for a developer to check their changes in production as soon as they’re deployed. The continuous deployment pipeline itself can fail for so many reasons <em>(the CI server can die, the deployment tool (<a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2015/jan/05/delivering-continuous-delivery-continuously#img-2\">RiffRaff</a>, for us) can forget to poll for new builds, the AWS auto-scaling group can end up in a bad state requiring manual intervention, the CDN can spontaneously decide to serve only stale content… and so on)</em> - you can monitor lots of different things, but the unknown, the unexpected, can fall between the cracks.</p> \n<p>We wanted a single check that would span the whole pipeline - from merged pull request to running site - and, as a side-benefit, be agnostic about everything inbetween, because there’s no reason why <em>your</em> pipeline should be anything like <em>our</em> pipeline (CI, deployment tools, hosting providers - those differ even for teams within the Guardian).<br /></p> \n<figure class=\"element element-image\" data-media-id=\"be1ff2087fb66d80c11ac0237d089de586d2ed27\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/2/1422904194691/cc914691-1849-43f6-9f79-f71018410b6f-460x276.png\" alt=\"Prout spans the continuous delivery pipeline from merged pull request to production deployment. Your army of mad zombie robotic squirrel scientists are not it’s concern, you might want to keep an eye on them.\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Prout spans the continuous delivery pipeline from merged pull request to production deployment. Your army of mad zombie robotic squirrel scientists are not it’s concern, you might want to keep an eye on them.</span> \n  <span class=\"element-image__credit\">Illustration: Roberto Tyley</span> \n </figcaption> \n</figure> \n<p>Prout only requires that you use GitHub pull requests, and that you expose the <strong>Git commit id</strong> of your build on your deployed site - a URL that Prout can hit. Prout only cares about the commit id, and definitely <em>doesn’t</em> care about build numbers. So for instance, if you look at the source of <a href=\"https://membership.theguardian.com/\">https://membership.theguardian.com/</a>, you’ll see something like this near the bottom of the page:</p> \n<blockquote> \n <p>&lt;!-- build-commit-id: 9ae9a6f4083c67abc1636057025ac060cbe04ab4 --&gt;</p> \n</blockquote> \n<p>Whenever you merge a pull request, Prout will hit your site and read that commit id - which tells it unambiguously what version of your software is being served to your users as of that moment. It also clones your GitHub repo, and compares your merged pull request with the history of the commit that’s currently on the site. From that, it can tell whether the site has your pull request or not.</p> \n<figure class=\"element element-image\" data-media-id=\"0e4e3538819dee946d5bd85a4d90937abd011659\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/1/1422825419862/f1d5d177-325c-48df-b1e7-97837cb0b39f-460x276.png\" alt=\"Establishing what's been deployed by looking at Git history\" width=\"460\" height=\"276\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Establishing what’s been deployed by looking at Git history. Prout walks the Git repository’s commit graph to see which pull requests are live. <strong>Live</strong> pull requests are the ones in the <em>history</em> of the build-commit that’s reported by the live production site.</span> \n  <span class=\"element-image__credit\">Illustration: Roberto Tyley</span> \n </figcaption> \n</figure> \n<p> As soon as Prout sees that the site is running a version that <em>includes</em> your pull request, it’ll update the pull request with a message like this:</p> \n<figure class=\"element element-image\" data-media-id=\"d356d44899b17b34067ab76141561db94507db25\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/1/29/1422555228706/d8e34cd6-3cd1-4eea-a87e-5847822863e4-460x59.png\" alt=\"Seen on PROD (merged by @rtyley 7 minutes and 9 seconds ago). Please check your changes!\" width=\"460\" height=\"59\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">A pull request makes it successfully on to production</span> \n </figcaption> \n</figure> \n<p>That “merged 7 minutes and 9 seconds ago” is kind of interesting - the total transit time required by your pipeline to get a code change in front of users. You’d obviously like to keep it as low as possible, and know if it’s getting too long. If your pull request doesn’t show up promptly, then something’s going wrong - and Prout will make a point of letting you know:</p> \n<figure class=\"element element-image\" data-media-id=\"e884993f9d444835de30959b6d90496e7c92000e\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/1/29/1422555566059/e430c299-9d38-4212-9816-1245d2ef2d23-460x59.png\" alt=\"Overdue on PROD (merged by @rtyley 15 minutes and 2 seconds ago). What's gone wrong?\" width=\"460\" height=\"59\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">A merged pull request has not yet made it it to production... time to investigate</span> \n </figcaption> \n</figure> \n<p>You can also get a great overview of what’s <em>been</em> deployed and what’s <em>about</em> to be deployed, just by looking at the labels in the GitHub <a href=\"https://github.com/guardian/membership-frontend/pulls?q=is%3Apr+is%3Aclosed\">closed pull requests</a> view:</p> \n<figure class=\"element element-image\" data-media-id=\"429e63f2d239b48604c65c966b0f4348c0c2b4a3\"> \n <img src=\"http://static.guim.co.uk/sys-images/Guardian/Pix/pictures/2015/2/2/1422915210343/e99fe5bb-c752-409f-86c0-9f5b8ca3358c-460x111.png\" alt=\"Merged pull requests, labelled according to deployment status\" width=\"460\" height=\"111\" class=\"gu-image\" /> \n <figcaption> \n  <span class=\"element-image__caption\">Merged pull requests, labelled according to deployment status</span> \n </figcaption> \n</figure> \n<h2>How do you configure Prout?</h2> \n<p>Place a <em>.prout.json</em> file in any folder in your repository you want to get monitored:<br /></p> \n<figure class=\"element element-code\"> \n <pre class=\"prettyprint\"><code class=\"language-javascript\">{\n&nbsp; &quot;checkpoints&quot;: {\n&nbsp; &nbsp; &quot;PROD&quot;: {\n&nbsp; &nbsp; &nbsp; &quot;url&quot;: &quot;https://membership.theguardian.com/&quot;,\n&nbsp; &nbsp; &nbsp; &quot;overdue&quot;: &quot;15M&quot;\n&nbsp; &nbsp; }\n&nbsp; }\n}</code></pre> \n</figure> \n<p>Whenever changes from a pull request touch files anywhere within that folder, the Prout configuration will fire, and Prout will update the pull request accordingly. More details are in the project <a href=\"https://github.com/guardian/prout#add-config-file\">README</a>.</p> \n<h2><p>Slack integration</p></h2> \n<p>Not everyone at the Guardian with a stake in the software we write (for instance, the in-house users of <a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2012/jul/20/discovery-week-day-five#block-5009896258f90c7116d835fa\">Ophan</a>) has a GitHub account, but it’s still good for them to know about the features and fixes we release - so Prout supports hooking into <a href=\"https://slack.com/\">Slack</a>, to let us communicate when those features are ready to try out.</p> \n<aside class=\"element element-rich-link element--thumbnail\"> \n <p> <span>Related: </span><a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2014/apr/11/how-the-guardian-uses-github-to-audit-github\">How the Guardian uses GitHub to audit GitHub</a> </p> \n</aside> \n<p>The way we let Prout know the Slack webhook URL is a hack. Slack webhooks are ‘private’ because they contain a unique code that allows you to post any message you want to that room. For a public repo like <a href=\"https://github.com/guardian/membership-frontend\">guardian/membership-frontend</a>, how would you configure the Slack webhook for Prout without publicising the URL? The answer is <a href=\"https://github.com/guardian/prout/pull/11\">a little abuse</a> of an admin-only feature of GitHub repos - <a href=\"https://developer.github.com/webhooks/creating/\">repository webhooks</a>. You can store URLs in there, and only admin-enabled users can see them. Store a Slack webhook URL in your repository’s webhooks, and Prout will pick it up, posting a Slack message every time a pull request is successfully deployed.<br /></p> \n<h2>Run your own Prout!</h2> \n<p>If this stuff sounds good to you, and you want to run your own instance of Prout against your own projects, you’ll want to create a dedicated GitHub account and <a href=\"https://help.github.com/articles/creating-an-access-token-for-command-line-use/\">access token</a> that can comment and set labels on those repositories. You can quickly deploy your own instance of Prout with Heroku (that’s not essential, just convenient. You may well want to run Prout on your own infrastructure):</p> \n<figure class=\"element element-embed\" data-alt=\"Deploy your own instance of Prout to Heroku\"> \n <iframe class=\"fenced\" srcdoc=\"&lt;a target=&quot;_blank&quot; href=&quot;https://heroku.com/deploy?template=https://github.com/guardian/prout&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.png&quot; alt=&quot;Deploy&quot; style=&quot;max-width:100%;&quot; /&gt;&lt;/a&gt;\"></iframe> \n</figure> \n<p>Prout, like <a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2014/apr/11/how-the-guardian-uses-github-to-audit-github\"><em>gu:who</em></a>, uses GitHub as the user interface, and supplies minimal UI itself. Try it out and give us your feedback!</p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/3/1422982632323/d26cf300-79ca-4793-bbde-00e53ee076ee-2060x1236.png?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","credit":"Roberto Tyley","altText":"Prout spans the continuous delivery pipeline","cleanCredit":"Photograph: Roberto Tyley"}],"bodyImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/c98c273057f7863257ae392e757f862594ca4171/0_452_2998_1800/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1201,"width":2000,"orientation":"landscape","caption":"A fireball erupts across Interstate 77 from a pipeline explosion. The gas company failed to conduct inspections or tests that might have revealed weaknesses in the massive pipeline. Photograph: West Virginia State Police/AP","credit":"West Virginia State Police/AP","altText":"A fireball erupts across Interstate 77 from a pipeline explosion. The gas company failed to conduct inspections or tests that might have revealed weaknesses in the massive pipeline.","cleanCaption":"A fireball erupts across Interstate 77 from a pipeline explosion. The gas company failed to conduct inspections or tests that might have revealed weaknesses in the massive pipeline.","cleanCredit":"Photograph: West Virginia State Police/AP"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/2/1422904197220/0f5ec394-8d85-4463-9fd1-d395937b0cdf-2060x1236.png?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"Prout spans the continuous delivery pipeline from merged pull request to production deployment. Your army of mad zombie robotic squirrel scientists are not it’s concern, you might want to keep an eye on them. Photograph: Illustration: Roberto Tyley","credit":"Illustration: Roberto Tyley","altText":"Prout spans the continuous delivery pipeline from merged pull request to production deployment. Your army of mad zombie robotic squirrel scientists are not it’s concern, you might want to keep an eye on them.","cleanCaption":"Prout spans the continuous delivery pipeline from merged pull request to production deployment. Your army of mad zombie robotic squirrel scientists are not it’s concern, you might want to keep an eye on them.","cleanCredit":"Illustration: Roberto Tyley"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/1/1422825420619/0b7edec5-d1e6-46b9-a3cc-f94d8cfeaa37-1020x612.png?width=#{width}&height=#{height}&quality=#{quality}","height":612,"width":1020,"orientation":"landscape","caption":"Establishing what’s been deployed by looking at Git history. Prout walks the Git repository’s commit graph to see which pull requests are live. <strong>Live</strong> pull requests are the ones in the <em>history</em> of the build-commit that’s reported by the live production site. Photograph: Illustration: Roberto Tyley","credit":"Illustration: Roberto Tyley","altText":"Establishing what's been deployed by looking at Git history","cleanCaption":"Establishing what’s been deployed by looking at Git history. Prout walks the Git repository’s commit graph to see which pull requests are live. <strong>Live</strong> pull requests are the ones in the <em>history</em> of the build-commit that’s reported by the live production site.","cleanCredit":"Illustration: Roberto Tyley"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/1/29/1422555227966/68cf2915-81fd-4799-a27b-82ca048eac80-620x80.png?width=#{width}&height=#{height}&quality=#{quality}","height":80,"width":620,"orientation":"landscape","caption":"A pull request makes it successfully on to production","credit":"Illustration: Roberto Tyley","altText":"Seen on PROD (merged by @rtyley 7 minutes and 9 seconds ago). Please check your changes!","cleanCaption":"A pull request makes it successfully on to production"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/1/29/1422555565815/d7cbdb44-97de-4b22-8142-de9225e3d6e6-620x79.png?width=#{width}&height=#{height}&quality=#{quality}","height":79,"width":620,"orientation":"landscape","caption":"A merged pull request has not yet made it it to production... time to investigate","credit":"Illustration: Roberto Tyley","altText":"Overdue on PROD (merged by @rtyley 15 minutes and 2 seconds ago). What's gone wrong?","cleanCaption":"A merged pull request has not yet made it it to production... time to investigate"},{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/2/2/1422915209602/90f78d60-85c8-4686-99b8-7f834fe3bcca-bestSizeAvailable.png?width=#{width}&height=#{height}&quality=#{quality}","height":150,"width":620,"orientation":"landscape","caption":"Merged pull requests, labelled according to deployment status","credit":"Illustration: Roberto Tyley","altText":"Merged pull requests, labelled according to deployment status","cleanCaption":"Merged pull requests, labelled according to deployment status"}],"webPublicationDate":"2015-02-03T16:31:51Z","lastModified":"2015-02-04T21:01:01Z","metadata":{"commentable":true,"commentCount":2,"contributors":[{"name":"Roberto Tyley","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/roberto-tyley"}],"feature":false,"keywords":["Technology","Open source","Software","Computing","Cloud computing"],"tags":[{"id":"technology/technology","webTitle":"Technology"},{"id":"technology/opensource","webTitle":"Open source"},{"id":"technology/software","webTitle":"Software"},{"id":"technology/computing","webTitle":"Computing"},{"id":"technology/cloud-computing","webTitle":"Cloud computing"}],"section":{"id":"info"},"displayHint":"technical","topics":[{"displayName":"Roberto Tyley","topic":{"type":"tag-contributor","name":"profile/roberto-tyley"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/feb/03/prout-is-your-pull-request-out","shortUrl":"http://gu.com/p/454y9","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/feb/03/prout-is-your-pull-request-out","webUri":"http://www.theguardian.com/info/developer-blog/2015/feb/03/prout-is-your-pull-request-out"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2015/1/29/1422571327127/832d8df0-1d8c-49e8-b380-1f9122a8b84b-620x80.png?width=#{width}&height=#{height}&quality=#{quality}","height":80,"width":620,"orientation":"landscape","caption":"Prout adds a comment to a deployed pull request - the change is in front of real-world users!","credit":"Illustration: Roberto Tyley","altText":"Seen on PROD (merged by @rtyley 7 minutes and 4 seconds ago). Please check your changes!","cleanCaption":"Prout adds a comment to a deployed pull request - the change is in front of real-world users!"}},"importance":5,"showQuotedHeadline":false,"sublinks":[]},{"title":"Five months in software development at the Guardian - what we’ve learned","rawTitle":"Five months in software development at the Guardian - what we’ve learned","item":{"type":"article","id":"info/developer-blog/2015/jan/27/five-months-in-software-development-at-the-guardian-what-weve-learned","title":"Five months in software development at the Guardian - what we’ve learned","trailText":"Three of the Guardian’s graduates reflect on what they have learnt so far.","standFirst":"<p>Three of the Guardian’s graduates reflect on what they have learnt so far</p>","byline":"Alessandro Ludovici, Josh Holder, Philip McMahon","body":"<p>As the first graduates on the Guardian’s brand new graduate scheme, none of us were quite sure what to expect. We all came from different educational backgrounds and even different parts of the world.</p> \n<p> <strong>Josh</strong>: I came from a fairly non-traditional background, having studied Mechanical Engineering and edited my student newspaper <a href=\"http://redbrick.me\">Redbrick</a>. I first got a taste of working here when my student newspaper’s website that I developed won ‘website of the year’ at the <a href=\"x-gu://list/mobile-apps.guardianapis.com/lists/tag/media/studentmediaawards\">Guardian Student Media Awards</a> and I spent a week here on work experience. I have been working on the Guardian’s new responsive website since I joined.</p> \n<p><strong>Phil:</strong> I studied Computer Science, with a year abroad in France. I got pretty excited when I saw the graduate scheme being advertised last year - I’d been a Guardian reader for a long time and was aware of some of the interesting things their developers had been doing. Five months in, I’m still very enthusiastic. Great things about working here have included learning <a href=\"http://www.scala-lang.org/\">Scala</a> (and attending <a href=\"https://skillsmatter.com/conferences/1948-scala-exchange-2014\">Scala eXchange</a>), working on the <a href=\"http://open-platform.theguardian.com/\">Content API </a>(horizontally scalable, using Elasticsearch and Amazon Web Services) and being able to sit in on editorial meetings.</p> \n<p><strong>Alessandro</strong>: I came from Italy where I got my degree in Telecommunication Engineering. After that, I moved to Barcelona where I did my PhD in Telematics Engineering, which was about the <a href=\"http://en.wikipedia.org/wiki/Internet_of_Things\">Internet Of Things</a>. It was during my PhD that I became interested in software development and decided to start a career in this field. I joined the Guardian after a one-year experience in a startup where I worked as an Android developer. In my first few months here I have been working on the Guardian’s editorial tools.</p> \n<h2>What we have learned</h2> \n<p>After spending five months in our development teams, here are a few things that we would like to share.</p> \n<p><strong>Software development: it’s all about the team.</strong> If you think software development is a solitary job, where human interaction is absent, then you’re wrong. Everything is about teamwork, learning and improving your skills - it’s a matter of how well your team works together. Every decision is discussed and taken together in an open approach. Your code is peer reviewed and, even as a new starter, you too are encouraged to review code - no matter how much experience you have. Pair programming is also a symptom that your team is healthy and a great opportunity for you to learn from senior members of the team.</p> \n<p><strong>Functional programming is great.</strong> We write a lot of Scala at the Guardian, a language which is not often taught in computer science or software engineering degrees. Functional programming might be covered, but perhaps not always <a href=\"http://xkcd.com/1312/\">taken very seriously</a>. It can be a little onerous to start a new job in a programming language very different from what you’ve used before, but contributing to an existing project with experienced developers available to answer questions and review code is a great way to learn a language. You don’t have to spend long developing in Scala to become a functional programming convert - the syntax is familiar to a Java developer, but so much more concise and readable.</p> \n<aside class=\"element element-pullquote\"> \n <blockquote> \n  <p>It’s almost impossible to be objective about the product you’re building eight hours a day</p> \n  <footer> \n   <cite></cite> \n  </footer> \n </blockquote> \n</aside> \n<p><strong>There’s no substitute for real user testing.</strong> It’s almost impossible to be objective about the product you’re building eight hours a day, so the sooner you can get your product in front of real users, the better. User testing can be instrumental to confirming your longstanding thoughts on your project, but your testers will often challenge your design decisions in galvanising ways that you just couldn’t get internally. The Guardian has a UX lab where we regularly test our designs with groups of users, with their feedback fed back to the entire team.</p> \n<p><strong>Data knows best.</strong> When working on a large project it’s crucial to establish a baseline against which you can measure the effect of your changes. That way you can set up dashboards to alert you when your error rates increase, measure the performance of navigational components and see if users are discovering your new feature. This large swathe of real-time data empowers developers by giving them more information about their platform.</p> \n<p><strong>Always write and run your unit tests.</strong> It’s often heard that the one truth about software development is that the only bug-free code has zero lines. The bad news is that they’re right, so it’s important to minimise the risk of bugs and avoid breaking existing functionality when writing your code. The good news is that you have <a href=\"http://en.wikipedia.org/wiki/Unit_testing\">unit tests</a> to help you with this task. If there’s one thing I have learnt so far, and that I will keep for the rest of my career, is that tests are your friends. It’s better you take care of them as you would do with your code.</p> \n<p><strong>Debugging and detective work.</strong> Debugging a problem in a system made up of several applications (often with several running instances of each application) isn’t always easy. Problems can occur across multiple applications, and there’s almost never logging in place exactly where you need it. It’s important to be able to make use of the information that is available to diagnose an issue, and try to include logging in the most useful places when writing code. Pre-production environments are good, being able to run a system locally is even better, making testing and debugging much faster.</p> \n<p><strong>Agile development is cool.</strong> The most stressful part of any job is dealing with deadlines. These are often established at the beginning of a project and not updated to take into account unforeseen complexity. Here at the Guardian we adopt an Agile development methodology. Agile minimises deadline pain and gives more attention to complexity rather than time. Agile also increases visibility and openness. Every team has a board full of cards showing the work in progress that everyone can see. You have a daily stand-up to talk about your progress blockers, achievements and even to cry for help.</p> \n<aside class=\"element element-rich-link element--thumbnail\"> \n <p> <span>Related: </span><a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2015/jan/20/how-does-the-guardian-recruit-developers\">How does the Guardian recruit developers?</a> </p> \n</aside> \n<p><strong>Autonomy comes with a learning curve.</strong> Most teams at the Guardian are responsible for their full stack, with an AWS account under their control. Developers therefore need to be able to manage the EC2 instances the applications they’re working on run from, and be ready to troubleshoot any issues. For someone relatively new to AWS, the number of different services can be overwhelming - Cloudformation, Autoscaling Groups, Load Balancers, Notification Topics, S3 buckets... and each service has its own parameters determining behaviour and which users have access to it. Getting to grips with all the infrastructure that the code you write will run on is a challenge, but worth it in the long run.</p> \n<p><strong>Invest the time to write clean, reusable code.</strong> In the whirlwind of a product launch, there is always a temptation to let code reusability take a backseat to actually shipping a sparkling new feature out to the world, but don’t let it. Investing the extra time initially will save you and your fellow developers hours of pain when it comes to maintaining and building on your code. On theguardian.com we use <a href=\"http://sass-lang.com/\">Sass</a>, a CSS pre-processor which lets developers use many features not natively available in CSS, such as variables and functions. This allows us to package up reusable chunks of CSS into helpers called mixins. We have a host of Sass mixins that automatically include the vendor-prefixes for CSS3 features such as transitions and box shadows, leaving our pre-compiled code much more readable and maintainable. As a new developer to the project, the number of in-house mixins increased the project’s learning curve, but by the four week mark they started to become second nature and many are now staples in my personal projects too.</p> \n<p><em>The Guardian is looking for graduate developers to start in September 2015. You can apply <a href=\"https://gnm.taleo.net/careersection/ex/jobdetail.ftl?job=KIN0000CO\">here</a>, or leave a comment with any questions you may have. </em></p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/3896a74d318eb17920d655f8ca0bb71b8c871ec8/0_0_4665_2799/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","credit":"Josh Holder","altText":"Code screenshot referring to Guardian graduate scheme","cleanCredit":"Photograph: Josh Holder"}],"bodyImages":[],"webPublicationDate":"2015-01-27T13:51:31Z","lastModified":"2015-01-27T13:54:42Z","metadata":{"commentable":true,"commentCount":6,"contributors":[{"name":"Alessandro Ludovici","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/alessandro-ludovici"},{"name":"Josh Holder","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/josh-holder"},{"name":"Philip McMahon","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/philip-mcmahon"}],"feature":false,"keywords":["Programming","Work & careers"],"tags":[{"id":"technology/programming","webTitle":"Programming"},{"id":"money/work-and-careers","webTitle":"Work & careers"}],"section":{"id":"info"},"topics":[],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/jan/27/five-months-in-software-development-at-the-guardian-what-weve-learned","shortUrl":"http://gu.com/p/44ppn","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/jan/27/five-months-in-software-development-at-the-guardian-what-weve-learned","webUri":"http://www.theguardian.com/info/developer-blog/2015/jan/27/five-months-in-software-development-at-the-guardian-what-weve-learned"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/3896a74d318eb17920d655f8ca0bb71b8c871ec8/0_0_4665_2799/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","caption":"The current crop of Guardian graduates give their insight into working here.","credit":"Josh Holder","altText":"The current crop of Guardian graduates give their insight into working here.","cleanCaption":"The current crop of Guardian graduates give their insight into working here."}},"importance":6,"showQuotedHeadline":false,"sublinks":[]},{"title":"Why learn about algorithms?","rawTitle":"Why learn about algorithms?","item":{"type":"article","id":"info/developer-blog/2015/jan/27/why-learn-about-algorithms","title":"Why learn about algorithms?","trailText":"You can write great software without thinking about algorithms and data structures, so why take the time to learn them?","standFirst":"","byline":"Hugo Gibson","body":"<p>Recently, we’ve been running a skill amnesty. The idea is that people can nominate a few skills they feel they’re lacking in (or not as good at they might hope) and then be matched with the relevant teacher. Classes have included: git, JavaScript, CSS, Python, Comparing Algorithms and more. </p> \n<p>I volunteered to teach the Comparing Algorithms class and got asked a challenging first question. The idea of the class is give people a crash course into how to figure out the complexity of a given algorithm. In other words, <a href=\"http://en.wikipedia.org/wiki/Big_O_notation\">Big O notation</a> and all that fun stuff. </p> \n<p>We were looking at search algorithms – simple ones like <a href=\"http://en.wikipedia.org/wiki/Linear_search\">linear search</a> and <a href=\"http://en.wikipedia.org/wiki/Binary_search_algorithm\">binary search</a>, O(n) vs O(log n) – and someone asked me “how often do you think about these things when you are programming?”. My answer was: “Rarely, if ever”. How often does anybody in their day-to-day programming tasks actually think about these things? I can’t say I’ve gone through a list of numbers and thought about the complexity of my list traversal. I know it’s O(n) but I’m not letting that hold me back on a million integer list.</p> \n<p>Almost every reasonable programming language provides fast implementations of every algorithm you can name. If a programming language doesn’t, it’s unlikely anyone will use it. It can take a bit of digging, but you can discover that Python uses a <a href=\"http://en.wikipedia.org/wiki/Timsort\">Timsort</a>, which is just a hybrid of <a href=\"http://en.wikipedia.org/wiki/Insertion_sort\">insertion sort</a> and <a href=\"http://en.wikipedia.org/wiki/Merge_sort\">merge sort</a>. More digging and we see that JavaScript uses <a href=\"http://en.wikipedia.org/wiki/Quicksort\">quicksort</a>, but might <a href=\"http://blog.mgechev.com/2012/11/24/javascript-sorting-performance-quicksort-v8/\">not be the case</a>. The point is that you shouldn’t really need to worry about what type of sorting algorithm your language of choice uses. Some <a href=\"http://en.wikipedia.org/wiki/Tony_Hoare\">clever</a> <a href=\"http://en.wikipedia.org/wiki/John_von_Neumann\">people</a> have already done that for us.</p> \n<p>So why bother to learn these things at all? I think the simple answer is in some strange, almost inexplicable way, it helps to know how an algorithm that you probably use every day works under the hood. It helps to know what a <a href=\"http://en.wikipedia.org/wiki/Linked_list\">linked list</a>, a <a href=\"http://en.wikipedia.org/wiki/Binary_tree\">binary tree</a>, and a <a href=\"http://en.wikipedia.org/wiki/Heap_(data_structure)\">heap</a> are, and what such structures might look like in memory. Once you know this information it can be easier to build abstractions out of the programs you’re writing. Nice abstractions lead to nicer code and nicer structure. Programming is as much about moving and transforming data as much as anything else and it’s these algorithms and data structures that do it.</p> \n<p>For me, algorithms give you a different way of thinking about computers. They’re elegant, high-level and abstract. You don’t have to worry about semantic and syntactical details. Mastering them, or at least understanding them, can lead to a great understanding about the nature of computers. While you might not endlessly compare sorting algorithms in your head, you’ll certainly appreciate them when you reach for the standard library’s implementation.</p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/c818725e232f706f67c02c2ea82f22f9898e5bf3/0_0_200_120/140.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":84,"width":140,"orientation":"landscape","credit":"Wikimedia","altText":"Quicksort Algorithm","cleanCredit":"Photograph: Wikimedia"}],"bodyImages":[],"webPublicationDate":"2015-01-27T13:40:53Z","lastModified":"2015-01-27T13:42:42Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Hugo Gibson","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/hugo-gibson"}],"feature":false,"keywords":["Programming","Computing"],"tags":[{"id":"technology/programming","webTitle":"Programming"},{"id":"technology/computing","webTitle":"Computing"}],"section":{"id":"info"},"displayHint":"technical","topics":[{"displayName":"Hugo Gibson","topic":{"type":"tag-contributor","name":"profile/hugo-gibson"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/jan/27/why-learn-about-algorithms","shortUrl":"http://gu.com/p/44qfk","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/jan/27/why-learn-about-algorithms","webUri":"http://www.theguardian.com/info/developer-blog/2015/jan/27/why-learn-about-algorithms"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/f6785e34c8a4d5e9524b5ed64504789db56534a3/0_0_2000_2436/1642.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":2000,"width":1642,"orientation":"portrait","caption":"Quicksort algorithm using the partition method Photograph: Wikimedia","credit":"Wikimedia","altText":"Quicksort algorithm","cleanCaption":"Quicksort algorithm using the partition method","cleanCredit":"Photograph: Wikimedia"}},"importance":3,"showQuotedHeadline":false,"sublinks":[]},{"title":"How does the Guardian recruit developers?","rawTitle":"How does the Guardian recruit developers?","item":{"type":"article","id":"info/developer-blog/2015/jan/20/how-does-the-guardian-recruit-developers","title":"How does the Guardian recruit developers?","trailText":"How we interview developers at the Guardian","standFirst":"<p>Recruiting people is a hard process: you need to be fair to both the candidate and the organisation. As part of making it easier for candidates who apply to be a developer at the Guardian we want to be open about our recruitment process</p>","byline":"Robert Rees","body":"<p>As part of our interviewing scripts we have reminders to tell the candidate at the start of each interview how the interviewing process works and where they are in terms of progress through the different stages . In this blog post I want to summarise the whole process and also add some more detail that answers questions that people have asked us during their application process. I hope at the end of the article you will be clear about how we conduct our recruiting and I will be able to share some insight about why we do things this way.</p> \n<p><br /></p> \n<h2>It all starts with an application</h2> \n<p>We receive a number of applications each week and when we review them we need to sort out genuine applications from the many speculative and often poor quality efforts.</p> \n<p>Some people fail to put the correct company name on their form covering letter, or are confused about which Guardian they are applying to. We do not do insurance (that’s <a href=\"http://www.guardianlife.com/\">Guardian Life</a>), property development (<a href=\"http://www.guardiandevelopers.in/\">Guardian Developers</a>) or healthcare (<a href=\"http://www.guardianhealthcare.com/\">Guardian Healthcare</a>). We are the news organisation, just in case you were uncertain about that.</p> \n<p>Good applications explain why someone wants to work at the Guardian, why they have decided to apply now, they point us towards source code, blogs or contributions to the community. They also tell us a bit about the applicant as a person and what they are like. Covering letters really matter and we always insist on an application having one.</p> \n<p>Poor applications are just lists of projects and technologies that make it difficult for the reviewer to understand what is important and relevant about the application. As an organisation we care a lot more about delivering value than we do using Scala or a particular framework. We care less about what you have done in the past and more about how you have done it and why.</p> \n<h2>An overview of the interview process</h2> \n<p><br /></p> \n<p>The basic interview process involves three stages:</p> \n<ol> \n <li>A phone interview<br /></li> \n <li>A pairing test<br /></li> \n <li>A face to face interview<br /></li> \n</ol> \n<p>Each stage has to be passed for the candidate to progress to the next.</p> \n<p>Sometimes we have additional steps based on the circumstances of the role and the candidate. For example, we will occasionally conduct a remote technical test prior to asking someone to travel to London for the pairing test. Occasionally we have additional interviews after the face to face interview to deal with particular questions that weren’t covered in the general interview, or potential team assignments where a particular team want to do an additional interview. These are very rare though and for most people there will be three straightforward stages. <br /></p> \n<h2>The phone interview</h2> \n<p>Our phone interview lasts between 15 to 30 minutes. It is our chance to find out more about the person beyond the CV.</p> \n<p>We have some technical questions. The exact questions vary according to the role you apply for but in general our questions are designed to be straightforward: we don’t ask any trick questions. We aim to make our questions open so that experts can go beyond the basic answer and adds the nuances. Internally we rank answers according to the depth of understanding the candidate demonstrated.</p> \n<p>One piece of advice for technical questions is not to try and bluff your way through things you don’t know. Some guesses are so strange or far from the mark that it often derails the interview for both sides. If you do not know the answer or you have not done any work on the subject of the question then move on to a question that you do know. Spend time on your strengths, not your weaknesses.</p> \n<p>The bulk of the questions are not technical though, we want to understand how a candidate thinks and therefore a lot of the questions are simply about giving the candidate a chance to explore what they think about a topic.</p> \n<p>There are no real right or wrong answers and I always say that the best approach is to be honest. One common mistake that people make in the phone interview is trying to second-guess what answer the interviewer wants to hear. Since we often don’t have a fixed “right” answer a candidate can end misrepresenting themselves in a pointless way.</p> \n<h2>The pairing test</h2> \n<p>I think pairing tests are the fairest form of interviewing you can offer. I know they can be stressful but they represent a big commitment in terms of effort and time. They create a situation that approximates the kind of work the organisation does rather than artificial trivia or whiteboard tests. They also give the candidate a chance to meet some of the people who already work at the Guardian and see if the environment suits them.</p> \n<p>We have a variety of pairing tests we do depending on the role being applied for. We have a general coding exercise, one for frontend technologies like HTML and CSS, one for JavaScript. I have also used actual production bugs for the test when we have been recruiting for very specific roles.</p> \n<p>In all cases though the critical things are the candidate’s ability to communicate, reason about problems, ask for help when needed and enjoyment of coding.</p> \n<p>In our general pairing test we do not have specific requirements for knowledge of the programming language. If you take the pairing test in Scala and you haven’t done much in the language then you are not expected to know much about the syntax. If you say you have ten years programming experience in Java but cannot write a try-catch block then that’s a different case. We try and match our expectations about performance against the experience the candidate claims.</p> \n<h2>Just another day at the office</h2> \n<p>A pairing test is in many ways just like turning up to work or taking part in a coding dojo. It seems trite, but if you can relax and enjoy the experience then you will do okay. If you feel like you have something to prove in terms of a solution or you feel you have to complete the exercise then you will put yourself under a lot of pressure which, like any stress, will impair your ability to work.</p> \n<p>If you have not done any pair-programming in your career then it is really worthwhile attending a coding event where you will get the chance to give it a go in a relaxed setting. Or perhaps simply persuade a friend to give it a go with you.</p> \n<p>You can read more about our <a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2014/may/28/changing-the-guardians-pairing-test\">pair-programming test</a> in this post.</p> \n<h2>The face to face interview</h2> \n<p>The final stage of the interview process is perhaps the most traditional. This is a straightforward face to face interview with two developers that have not been involved in the process to date.</p> \n<p>To some extent the face to face covers the same ground as the phone screen but in more depth. There are some technical questions, some design ones and some almost philosophical ones about the candidate’s approach to problems.</p> \n<p>Our interview scripts are fairly broad in scope and questions are usually based on the work the candidate has done rather than fixed questions and answers. We are more likely to ask how and why you’ve solved problems in your own projects than to discuss abstract examples.</p> \n<p>We will ask some questions that are relevant to our main line of business: distributing news on a global scale on public platforms like the web.</p> \n<p>You might find it helpful to think about how websites scale from a solution-design perspective but we appreciate that most people who work on websites do not have the scaling issues that the Guardian does. In fact tackling some of those problems is part of the opportunity of working here!</p> \n<p>I try to say to candidates that the final interview is also their chance to make sure that they want to work at the Guardian. As interviewers we need to make sure we gather all the information that we need to make a decision about a candidate. For candidates it is important that they understand what it means to work at the Guardian and that they ask all the questions they need to decide whether they will take a job with us. All interviews are two-way processes but this is particularly true at this point. Think about your hopes and concerns and try to write a list of questions so you are not trying to remember them during the interview.</p> \n<h2>Communicating the results of interviews</h2> \n<p>We try to be as clear and as explicit as we can be in our communications with candidates. There are no subtle “read between the lines” statements. We aim to respond to candidates quickly, ideally with two working days. We will always get back to candidates and candidates are entitled to feedback on their performance. Occasionally we have had problems with email or missed calls – if you have not heard about the outcome of an interview in a working week you should get back in touch with us. We might be struggling to get in touch with you!</p> \n<h2>Preparing for the interviews</h2> \n<p>Some people ask what they need to do to prepare for our interviews. The key thing is to read back over your covering letter and CV. We will generally discuss what you have done as you have presented it to us. Be prepared to expand and clarify the information there. When answering questions try to stick to real examples rather than theoretical situations. If you can talk sensibly and clearly about your coding and work to date then you are prepared for most of our interviews.</p> \n<p>Some general interview advice: remember that giving very long answers runs the risk of running out of time, particularly in phone interviews. Be prepared to check whether an answer is sufficient or whether the interviewer would like you to expand on it. Try and vary your examples: if you only ever talk about your latest work then it gives the impression that you have not done anything else.</p> \n<h2>Technical questions</h2> \n<p>Our interviews are not technical in an abstract sense. How webservers work is important, standards like HTTP, HTML and CSS are important but we are language-agnostic and we care more about general best-practices in software development, particularly around web development, than we do about the details of algorithms. We are interested in problem-solving techniques, not memory exercises.</p> \n<p>If you don’t claim to have knowledge of a particular technology we don’t think it is fair to expect you to know about that technology, even if we use it a lot internally.</p> \n<p>For more experienced candidates we may ask you to extrapolate on the things you know. So if you use relational databases then we might ask what common techniques are used to help scale them and what the trade-offs involved are.</p> \n<h2>Dress code</h2> \n<p>The Guardian has a very relaxed dress code (some might call it slightly shabby) so you only need to turn up in formal business dress if it makes you feel right for the interview.</p> \n<h2>Experience</h2> \n<p>We aim to have a ratio in engineering between senior and non-senior engineers of one to one. While organisations tend to be biased towards experience we also understand the importance of having people grow and develop internally. We review the current ratio quarterly to try and understand whether we have trended one way or the other. <br /></p> \n<p>This previous post tries to explain <a href=\"x-gu://item/mobile-apps.guardianapis.com/items/info/developer-blog/2014/aug/28/what-does-it-mean-to-be-a-senior-developer\">what we regard a senior developer to be</a>.</p> \n<h2>Being open</h2> \n<p>We believe that being open and transparent helps people to do their work better. By being open about the context and parameters of our interview process we hope to improve the interview process both for you as a candidate and for us as interviewers. We want to give you the best chance to succeed in your application and we want to try to set a high standard for ourselves. We want to be as objective as possible in assessing potential hires.</p> \n<h2>Join us</h2> \n<p>For more information about the department, our developers and the roles we currently have open visit our <a href=\"http://developers.theguardian.com\">developers site</a>.</p>","section":"Info","displayImages":[{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2014/12/2/1417534605611/14791700300_c075021069_o-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","credit":"Trevor Cummings/flickr","altText":"Women talking together at a table"}],"bodyImages":[],"webPublicationDate":"2015-01-20T10:00:09Z","lastModified":"2015-01-20T10:03:42Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Robert Rees","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/robert-rees"}],"feature":false,"keywords":["Technology","Job hunting","Programming","Work & careers","Computing"],"tags":[{"id":"technology/technology","webTitle":"Technology"},{"id":"money/job-hunting","webTitle":"Job hunting"},{"id":"technology/programming","webTitle":"Programming"},{"id":"money/work-and-careers","webTitle":"Work & careers"},{"id":"technology/computing","webTitle":"Computing"}],"section":{"id":"info"},"topics":[{"displayName":"Robert Rees","topic":{"type":"tag-contributor","name":"profile/robert-rees"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/jan/20/how-does-the-guardian-recruit-developers","shortUrl":"http://gu.com/p/43zcc","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/jan/20/how-does-the-guardian-recruit-developers","webUri":"http://www.theguardian.com/info/developer-blog/2015/jan/20/how-does-the-guardian-recruit-developers"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/static/sys-images/Guardian/Pix/pictures/2014/12/2/1417534605611/14791700300_c075021069_o-2060x1236.jpeg?width=#{width}&height=#{height}&quality=#{quality}","height":1236,"width":2060,"orientation":"landscape","caption":"TEA00719 - Starbucks Coffee, Oxford Street/Oxford Road, Manchester, UK. <a href=\"https://www.flickr.com/photos/trevorcummings/14791700300/\">Photograph: Trevor Cummings/flickr</a>","credit":"Trevor Cummings/flickr","altText":"Women talking together at a table","cleanCaption":"TEA00719 - Starbucks Coffee, Oxford Street/Oxford Road, Manchester, UK. <a href=\"https://www.flickr.com/photos/trevorcummings/14791700300/\">Photograph: Trevor Cummings/flickr</a>"}},"importance":4,"showQuotedHeadline":false,"sublinks":[]},{"title":"Hour(s) of Code – inspiring the next generation","rawTitle":"Hour(s) of Code – inspiring the next generation","item":{"type":"article","id":"info/developer-blog/2015/jan/13/hours-of-code-inspiring-the-next-generation","title":"Hour(s) of Code – inspiring the next generation","trailText":"We ran an Hour of Code session for our Guardian colleagues – here’s what we learned (and how you can help)<br>","standFirst":"<p>We ran an Hour of Code session for our Guardian colleagues – here’s what we learned (and how you can help)<br /></p>","byline":"Huma Islam","body":"<p>I first heard about hosting an <a href=\"http://hourofcode.com/us\">Hour of Code</a> when we agreed to participate at work during <a href=\"http://csedweek.org/\">Computer Science Education week</a> and I volunteered to <a href=\"http://hourofcode.com/us/resources/how-to\">host</a> it. The aim was to be of interest to people who aren’t in computing and to show them that it involves basic problem solving skills at its core. If you enjoy that, you may enjoy computing.</p> \n<p>You may have heard about it when <a href=\"http://www.forbes.com/sites/quora/2014/12/10/what-program-did-obama-write-to-kick-off-hour-of-code-2014/\">President Obama had a go too</a> – we chose the same tutorial for the groups at work.</p> \n<p>As hosts, we were initially concerned about hosting sessions with our colleagues without knowing their expectations. We also wondered whether exercises aimed at children were suitable or would be perceived as patronising.</p> \n<p>Due to time constraints, we decided to go ahead and it was fun and we ran three sessions. Maybe we had worried too much: we had a whole range of people – from those who wanted to code using a particular language to those who didn’t know what to expect at all.</p> \n<p>They may have come across coding by doing some before, through the new Computing curriculum with their kids or from building their own websites or apps. Or they may consider themselves technophobes.</p> \n<p>We know that some people who thought the session was not what they were interested in (they expected to learn Java) found the follow-up links we sent were valuable. One was able to explore making apps on their own which was really exciting. Another person continued by completing further modules with their children.</p> \n<p>The major impact running the Guardian session had on me was that it led me to to effectively host another one with the community organiser at a <a href=\"https://bemerton.wordpress.com/2014/01/07/new-job-club/\">Job Club</a> I volunteer with. The trepidation and excitement that showed on her face when she started out was palpable. She then whizzed through it and within twenty minutes was considering hosting sessions for the job club herself. </p> \n<p>I also hosted a one-to-one session with a lady who had tried online tutorials in Java etc. without knowing why she wanted to. The beauty of these sessions was that it abstracted all the nuances of a language so that you became less scared of the concepts of coding. Starting off with a language when you’ve never done anything before probably sets you off worrying about the wrong thing, which can be very off-putting. </p> \n<p>The site is designed to take away all the blockers – and that is the beauty of this scheme.<br /></p> \n<p>Don’t have a computer? These tutorials can run on your phone or tablet. Don’t have time? It only takes an hour (actually it takes most people only twenty minutes to finish it even if they have very little experience). Most folks even skip the videos explaining the tutorial. Don’t have access to <em>anything</em> (apart from paper, pen and cups)? Try the <a href=\"http://csedweek.org/unplugged/thinkersmith\">offline/unplugged</a> version or adapt it.</p> \n<p>The only blocker I spotted was people understanding how the blocks connect (the tutorials we chose uses blocks similar to <a href=\"http://scratch.mit.edu/\">Scratch</a>) – this is when they skip the video. Once people see that, they are off and it’s hard to stop them.</p> \n<p>The aim is to be self-guided. Hosting a session is a nice bonus.</p> \n<p><strong>Some things I observed</strong></p> \n<ul> \n <li>People sometimes just need to give themselves permission to do stuff – and hosting these sessions helps as it’s in a friendly environment</li> \n <li>We were concerned it may seem patronising as it’s catering for kids and considered making our own work-related tutorials, but in fact these tutorials were fun and easy for the participants. </li> \n <li>For those for whom this was way too easy or not what they were looking for, we were able to chat to them and find out what they need and see if we can help with a more tailored approach</li> \n <li>We also followed up with links that may be of interest (i.e. what next) and it was good to hear back from the people</li> \n <li>We encouraged people to work it out for themselves and didn’t just tell them what to do. The tutorials do explain everything if they get stuck though.</li> \n <li>When you are in a profession, you forget what it looks like for outsiders – it’s worth remembering that.</li> \n <li>Before you host the session, make sure you try a couple of tutorials (including the <a href=\"http://csedweek.org/unplugged/thinkersmith\">offline/unplugged</a> one so you have a backup plan when tech fails)</li> \n <li>These tutorials can be run on the person’s smartphone or tablet too </li> \n <li><a href=\"http://hourofcode.com/us/tutorial-guidelines\">These guidelines</a> contain a helpful list for for you to consider if you want to make your own tutorials to encourage independent learning</li> \n <li>It’s great watching people get excited and hearing what they do next</li> \n</ul> \n<p><strong>What next for the participants?</strong></p> \n<p>Obviously, you make a connection with the people who come to your session and you can help them directly, as we found out for ourselves. However, in the spirit of self-guided learning, here are some follow-up links</p> \n<ul> \n <li><a href=\"http://code.org/learn/beyond\">Beyond the hour of code resources</a> - you can likely do this on a tablet.</li> \n <li><a href=\"http://appinventor.mit.edu/explore/\">MIT App Inventor</a> - build your own Android apps using blocks again - I tried making <a href=\"http://appinventor.mit.edu/explore/ai2/molemash.html\">Wackamole</a> on my smartphone and adapting it was a lot of fun</li> \n <li><a href=\"https://apps.webmaker.org/designer\">Mozilla AppMaker</a>: Build webapps that are optimised for mobile platforms. <br /></li> \n <li><a href=\"http://danielstern.github.io/cyo/\">CYO</a>: A “Choose Your Own Adventure” style webpage maker.</li> \n <li>FutureLearn - <a href=\"https://www.futurelearn.com/courses/begin-programming\">Build your First mobile game (using Java)</a> </li> \n <li><a href=\"https://www.khanacademy.org/computing/computer-programming\">Khan Academy Computer Programming stream</a> </li> \n <li><a href=\"http://www.codecademy.com/\">codecademy</a> - interactive environment</li> \n <li><a href=\"http://teamtreehouse.com/\">treehouse</a> - websites and apps</li> \n <li><a href=\"https://www.coursera.org/courses?query=computing\">Coursera</a> </li> \n</ul> \n<p>The Hour of Code week is over but that shouldn’t stop you from trying it out and maybe encouraging others to do the same.</p>","section":"Info","displayImages":[],"bodyImages":[],"webPublicationDate":"2015-01-13T16:34:09Z","lastModified":"2015-01-13T16:36:42Z","metadata":{"commentable":true,"commentCount":0,"contributors":[{"name":"Huma Islam","uri":"http://mobile-apps.guardianapis.com/lists/tag/profile/huma-islam"}],"feature":false,"keywords":["Computer science and IT","Programming","Technology"],"tags":[{"id":"education/computerscienceandit","webTitle":"Computer science and IT"},{"id":"technology/programming","webTitle":"Programming"},{"id":"technology/technology","webTitle":"Technology"}],"section":{"id":"info"},"topics":[{"displayName":"Huma Islam","topic":{"type":"tag-contributor","name":"profile/huma-islam"}}],"embeddedVideos":[],"adTargetingPath":"info"},"style":{"navigationColour":"#005689","navigationDownColour":"#4bc6df","ruleColour":"#4bc6df","headlineColour":"#333333","standfirstColour":"#676767","metaColour":"#999999","dividerColour":"#dcdad5","backgroundColour":"#ffffff","savedForLaterTrueColour":"#333333","savedForLaterFalseColour":"#999999","kickerColour":"#005689","colourPalette":"news"},"links":{"uri":"http://mobile-apps.guardianapis.com/items/info/developer-blog/2015/jan/13/hours-of-code-inspiring-the-next-generation","shortUrl":"http://gu.com/p/44jcj","relatedUri":"http://mobile-apps.guardianapis.com/items-related/info/developer-blog/2015/jan/13/hours-of-code-inspiring-the-next-generation","webUri":"http://www.theguardian.com/info/developer-blog/2015/jan/13/hours-of-code-inspiring-the-next-generation"},"shouldHideAdverts":false,"headerImage":{"urlTemplate":"http://images.mobile-apps.guardianapis.com/media/9d4d00be23073466a3199cebd1501ec182bfd1c1/861_449_2047_1228/2000.jpg?width=#{width}&height=#{height}&quality=#{quality}","height":1200,"width":2000,"orientation":"landscape","caption":"Working on the hour of code Photograph: Guardian","credit":"Guardian","cleanCaption":"Working on the hour of code","cleanCredit":"Photograph: Guardian"}},"importance":4,"showQuotedHeadline":false,"sublinks":[]}],"lastModified":"2015-06-10T14:39:44Z","adverts":[{"type":"super-header","location":4,"frequency":6},{"type":"tablet-mpu","location":9,"frequency":19},{"type":"mobile-mpu","location":4,"frequency":6},{"type":"mobile-banner","location":4,"frequency":6}],"topics":[{"displayName":"Developer blog","topic":{"type":"tag-blog","name":"info/developer-blog"}}],"personalization":{"id":"groups/tag/info/developer-blog","uri":"http://mobile-apps.guardianapis.com/groups/tag/info/developer-blog"},"adTargetingPath":"info/developer-blog","webUri":"http://www.theguardian.com/info/developer-blog"}